module Main

def testTime(write ok Int, write errorsCoordinates List)
    testTime_Any(ok, errorsCoordinates)
    testTime_Time(ok, errorsCoordinates)
    testTime_DisassembleTime(ok, errorsCoordinates)
    testTime_GetCurrentTime(ok, errorsCoordinates)
    testTime_Equal(ok, errorsCoordinates)
    testTime_Ordered(ok, errorsCoordinates)
    testTime_StringWriter(ok, errorsCoordinates)
    testTime_StringReader(ok, errorsCoordinates)
    testTime_Hashable(ok, errorsCoordinates)
    testTime_BinarySerializable(ok, errorsCoordinates)

#noinline
def testTime_Any(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        1.intToTime().use?() == false
        2.intToTime().use?() == false
        1.intToTime().constant?() == false
        2.intToTime().constant?() == false
        3.intToTime().clone() == 3.intToTime()
        100.intToTime().clone() == 100.intToTime()
        100.intToTime().dump(0) == ("Type: STD::Time = " + 100.intToTime().toString() + "\n")
        100.intToTime().dump(1) == ("  Type: STD::Time = " + 100.intToTime().toString() + "\n")
        100.intToTime().dump(2) == ("    Type: STD::Time = " + 100.intToTime().toString() + "\n")

#noinline
def testTime_Time(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        time(2048599, 6, 28, 1, 38, 56).timeToInt() == 64585388540336
        time(2563656, 9, 6, 21, 43, 43).timeToInt() == 80839023745423
        time(4436113, 12, 16, 1, 22, 16).timeToInt() == 139928067998536
        time(1115545, 8, 18, 6, 10, 19).timeToInt() == 35141052636619
        time(5439295, 1, 25, 15, 24, 50).timeToInt() == 171585406221890
        time(820054, 5, 17, 13, 0, 4).timeToInt() == 25816249371604
        time(4668702, 2, 9, 19, 31, 14).timeToInt() == 147267841116674
        time(5225877, 11, 20, 19, 35, 43).timeToInt() == 164850610476943
        time(2004, 2, 29, 12, 18, 35).timeToInt() == 1078057115
        time(2004, 2, 28, 12, 18, 35).timeToInt() == 1077970715
        time(2003, 2, 28, 0, 18, 35).timeToInt() == 1046391515
        time(2333, 12, 31, 7, 18, 35).timeToInt() == 11486647115
        time(1976, 4, 10, 14, 28, 16).timeToInt() == 197994496
        time(1974, 3, 8, 7, 44, 1).timeToInt() == 131960641
        time(1974, 6, 20, 2, 20, 32).timeToInt() == 140926832
        time(1977, 1, 22, 22, 4, 56).timeToInt() == 222818696
        time(1979, 4, 14, 16, 6, 46).timeToInt() == 292954006
        time(1978, 8, 5, 3, 43, 27).timeToInt() == 271136607
        time(1973, 7, 19, 19, 37, 23).timeToInt() == 111958643
        time(1976, 10, 27, 16, 37, 38).timeToInt() == 215282258
        time(1980, 2, 29, 12, 18, 35).timeToInt() == 320674715
        time(1980, 2, 28, 12, 18, 35).timeToInt() == 320588315
        time(1983, 2, 28, 12, 18, 35).timeToInt() == 415282715
        time(1999, 12, 31, 7, 18, 35).timeToInt() == 946624715
        time(1970, 1, 1, 0, 0, 0).timeToInt() == 0
        time(1969, 12, 31, 7, 18, 35).timeToInt() : error_outOfRange
        time(1900, 12, 31, 7, 18, 35).timeToInt() : error_outOfRange
        time(-1, 12, 31, 7, 18, 35).timeToInt() : error_outOfRange
        time(-9223372036854775808, 12, 31, 7, 18, 35).timeToInt() : error_outOfRange
        time(0, 12, 31, 7, 18, 35).timeToInt() : error_outOfRange
        time(1970, 0, 31, 7, 18, 35).timeToInt() : error_outOfRange
        time(1970, 13, 31, 7, 18, 35).timeToInt() : error_outOfRange
        time(1970, 9223372036854775807, 31, 7, 18, 35).timeToInt() : error_outOfRange
        time(1970, -1, 31, 7, 18, 35).timeToInt() : error_outOfRange
        time(1970, 3, 32, 7, 18, 35).timeToInt() : error_outOfRange
        time(1970, 3, 9223372036854775807, 7, 18, 35).timeToInt() : error_outOfRange
        time(1970, 3, 0, 7, 18, 35).timeToInt() : error_outOfRange
        time(1970, 3, -1, 7, 18, 35).timeToInt() : error_outOfRange
        time(1970, 3, -9223372036854775808, 7, 18, 35).timeToInt() : error_outOfRange
        time(1970, 3, 12, 25, 18, 35).timeToInt() : error_outOfRange
        time(1970, 3, 12, 9223372036854775807, 18, 35).timeToInt() : error_outOfRange
        time(1970, 3, 12, -1, 18, 35).timeToInt() : error_outOfRange
        time(1970, 3, 12, -9223372036854775808, 18, 35).timeToInt() : error_outOfRange
        time(1970, 3, 12, 0, 60, 35).timeToInt() : error_outOfRange
        time(1970, 3, 12, 0, 9223372036854775807, 35).timeToInt() : error_outOfRange
        time(1970, 3, 12, 0, -1, 35).timeToInt() : error_outOfRange
        time(1970, 3, 12, 0, -9223372036854775808, 35).timeToInt() : error_outOfRange
        time(1970, 3, 12, 0, 0, 60).timeToInt() : error_outOfRange
        time(1970, 3, 12, 0, 0, 9223372036854775807).timeToInt() : error_outOfRange
        time(1970, 3, 12, 0, 0, -1).timeToInt() : error_outOfRange
        time(1970, 3, 12, 0, 0, -9223372036854775808).timeToInt() : error_outOfRange
        time(1969, 0, 0, -1, 61, 61).timeToInt() : error_outOfRange
        time(1970, 2, 29, 0, 0, 0).timeToInt() : error_outOfRange
        time(1970, 4, 31, 0, 0, 0).timeToInt() : error_outOfRange

#noinline
def testTime_DisassembleTime(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        disassembleTime(intToTime(64585388540336)) == [2048599, 6, 28, 1, 38, 56]
        disassembleTime(intToTime(80839023745423)) == [2563656, 9, 6, 21, 43, 43]
        disassembleTime(intToTime(139928067998536)) == [4436113, 12, 16, 1, 22, 16]
        disassembleTime(intToTime(35141052636619)) == [1115545, 8, 18, 6, 10, 19]
        disassembleTime(intToTime(171585406221890)) == [5439295, 1, 25, 15, 24, 50]
        disassembleTime(intToTime(25816249371604)) == [820054, 5, 17, 13, 0, 4]
        disassembleTime(intToTime(147267841116674)) == [4668702, 2, 9, 19, 31, 14]
        disassembleTime(intToTime(164850610476943)) == [5225877, 11, 20, 19, 35, 43]
        disassembleTime(intToTime(1078057115)) == [2004, 2, 29, 12, 18, 35]
        disassembleTime(intToTime(1077970715)) == [2004, 2, 28, 12, 18, 35]
        disassembleTime(intToTime(1046391515)) == [2003, 2, 28, 0, 18, 35]
        disassembleTime(intToTime(11486647115)) == [2333, 12, 31, 7, 18, 35]
        disassembleTime(intToTime(197994496)) == [1976, 4, 10, 14, 28, 16]
        disassembleTime(intToTime(131960641)) == [1974, 3, 8, 7, 44, 1]
        disassembleTime(intToTime(140926832)) == [1974, 6, 20, 2, 20, 32]
        disassembleTime(intToTime(222818696)) == [1977, 1, 22, 22, 4, 56]
        disassembleTime(intToTime(292954006)) == [1979, 4, 14, 16, 6, 46]
        disassembleTime(intToTime(271136607)) == [1978, 8, 5, 3, 43, 27]
        disassembleTime(intToTime(111958643)) == [1973, 7, 19, 19, 37, 23]
        disassembleTime(intToTime(215282258)) == [1976, 10, 27, 16, 37, 38]
        disassembleTime(intToTime(320674715)) == [1980, 2, 29, 12, 18, 35]
        disassembleTime(intToTime(320588315)) == [1980, 2, 28, 12, 18, 35]
        disassembleTime(intToTime(415282715)) == [1983, 2, 28, 12, 18, 35]
        disassembleTime(intToTime(946624715)) == [1999, 12, 31, 7, 18, 35]
        disassembleTime(intToTime(0)) == [1970, 1, 1, 0, 0, 0]
        [2048599, 6, 28, 1, 38, 56] == [year~(64585388540336.intToTime()), month~(64585388540336.intToTime()), day~(64585388540336.intToTime()), hour~(64585388540336.intToTime()), minute~(64585388540336.intToTime()), second~(64585388540336.intToTime())]
        [2563656, 9, 6, 21, 43, 43] == [year~(80839023745423.intToTime()), month~(80839023745423.intToTime()), day~(80839023745423.intToTime()), hour~(80839023745423.intToTime()), minute~(80839023745423.intToTime()), second~(80839023745423.intToTime())]
        [4436113, 12, 16, 1, 22, 16] == [year~(139928067998536.intToTime()), month~(139928067998536.intToTime()), day~(139928067998536.intToTime()), hour~(139928067998536.intToTime()), minute~(139928067998536.intToTime()), second~(139928067998536.intToTime())]
        [1115545, 8, 18, 6, 10, 19] == [year~(35141052636619.intToTime()), month~(35141052636619.intToTime()), day~(35141052636619.intToTime()), hour~(35141052636619.intToTime()), minute~(35141052636619.intToTime()), second~(35141052636619.intToTime())]
        [5439295, 1, 25, 15, 24, 50] == [year~(171585406221890.intToTime()), month~(171585406221890.intToTime()), day~(171585406221890.intToTime()), hour~(171585406221890.intToTime()), minute~(171585406221890.intToTime()), second~(171585406221890.intToTime())]
        [820054, 5, 17, 13, 0, 4] == [year~(25816249371604.intToTime()), month~(25816249371604.intToTime()), day~(25816249371604.intToTime()), hour~(25816249371604.intToTime()), minute~(25816249371604.intToTime()), second~(25816249371604.intToTime())]
        [4668702, 2, 9, 19, 31, 14] == [year~(147267841116674.intToTime()), month~(147267841116674.intToTime()), day~(147267841116674.intToTime()), hour~(147267841116674.intToTime()), minute~(147267841116674.intToTime()), second~(147267841116674.intToTime())]
        [5225877, 11, 20, 19, 35, 43] == [year~(164850610476943.intToTime()), month~(164850610476943.intToTime()), day~(164850610476943.intToTime()), hour~(164850610476943.intToTime()), minute~(164850610476943.intToTime()), second~(164850610476943.intToTime())]
        [2004, 2, 29, 12, 18, 35] == [year~(1078057115.intToTime()), month~(1078057115.intToTime()), day~(1078057115.intToTime()), hour~(1078057115.intToTime()), minute~(1078057115.intToTime()), second~(1078057115.intToTime())]
        [2004, 2, 28, 12, 18, 35] == [year~(1077970715.intToTime()), month~(1077970715.intToTime()), day~(1077970715.intToTime()), hour~(1077970715.intToTime()), minute~(1077970715.intToTime()), second~(1077970715.intToTime())]
        [2003, 2, 28, 0, 18, 35] == [year~(1046391515.intToTime()), month~(1046391515.intToTime()), day~(1046391515.intToTime()), hour~(1046391515.intToTime()), minute~(1046391515.intToTime()), second~(1046391515.intToTime())]
        [2333, 12, 31, 7, 18, 35] == [year~(11486647115.intToTime()), month~(11486647115.intToTime()), day~(11486647115.intToTime()), hour~(11486647115.intToTime()), minute~(11486647115.intToTime()), second~(11486647115.intToTime())]
        [1976, 4, 10, 14, 28, 16] == [year~(197994496.intToTime()), month~(197994496.intToTime()), day~(197994496.intToTime()), hour~(197994496.intToTime()), minute~(197994496.intToTime()), second~(197994496.intToTime())]
        [1974, 3, 8, 7, 44, 1] == [year~(131960641.intToTime()), month~(131960641.intToTime()), day~(131960641.intToTime()), hour~(131960641.intToTime()), minute~(131960641.intToTime()), second~(131960641.intToTime())]
        [1974, 6, 20, 2, 20, 32] == [year~(140926832.intToTime()), month~(140926832.intToTime()), day~(140926832.intToTime()), hour~(140926832.intToTime()), minute~(140926832.intToTime()), second~(140926832.intToTime())]
        [1977, 1, 22, 22, 4, 56] == [year~(222818696.intToTime()), month~(222818696.intToTime()), day~(222818696.intToTime()), hour~(222818696.intToTime()), minute~(222818696.intToTime()), second~(222818696.intToTime())]
        [1979, 4, 14, 16, 6, 46] == [year~(292954006.intToTime()), month~(292954006.intToTime()), day~(292954006.intToTime()), hour~(292954006.intToTime()), minute~(292954006.intToTime()), second~(292954006.intToTime())]
        [1978, 8, 5, 3, 43, 27] == [year~(271136607.intToTime()), month~(271136607.intToTime()), day~(271136607.intToTime()), hour~(271136607.intToTime()), minute~(271136607.intToTime()), second~(271136607.intToTime())]
        [1973, 7, 19, 19, 37, 23] == [year~(111958643.intToTime()), month~(111958643.intToTime()), day~(111958643.intToTime()), hour~(111958643.intToTime()), minute~(111958643.intToTime()), second~(111958643.intToTime())]
        [1976, 10, 27, 16, 37, 38] == [year~(215282258.intToTime()), month~(215282258.intToTime()), day~(215282258.intToTime()), hour~(215282258.intToTime()), minute~(215282258.intToTime()), second~(215282258.intToTime())]
        [1980, 2, 29, 12, 18, 35] == [year~(320674715.intToTime()), month~(320674715.intToTime()), day~(320674715.intToTime()), hour~(320674715.intToTime()), minute~(320674715.intToTime()), second~(320674715.intToTime())]
        [1980, 2, 28, 12, 18, 35] == [year~(320588315.intToTime()), month~(320588315.intToTime()), day~(320588315.intToTime()), hour~(320588315.intToTime()), minute~(320588315.intToTime()), second~(320588315.intToTime())]
        [1983, 2, 28, 12, 18, 35] == [year~(415282715.intToTime()), month~(415282715.intToTime()), day~(415282715.intToTime()), hour~(415282715.intToTime()), minute~(415282715.intToTime()), second~(415282715.intToTime())]
        [1999, 12, 31, 7, 18, 35] == [year~(946624715.intToTime()), month~(946624715.intToTime()), day~(946624715.intToTime()), hour~(946624715.intToTime()), minute~(946624715.intToTime()), second~(946624715.intToTime())]
        [1970, 1, 1, 0, 0, 0] == [year~(0.intToTime()), month~(0.intToTime()), day~(0.intToTime()), hour~(0.intToTime()), minute~(0.intToTime()), second~(0.intToTime())]

#noinline
def testTime_GetCurrentTime(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        currentTime().timeToInt() > 1611836686

#noinline
def testTime_Equal(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        0.intToTime() == 0.intToTime()
        4.intToTime() == 4.intToTime()
        9223372036854775807.intToTime() == 9223372036854775807.intToTime()
        0.intToTime() != 9223372036854775807.intToTime()
        0.intToTime() != 1.intToTime()
        4.intToTime() != 3.intToTime()
        9223372036854775807.intToTime() != 9223372036854775806.intToTime()

#noinline
def testTime_Ordered(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        1.intToTime() > 0.intToTime()
        9223372036854775807.intToTime() > 0.intToTime()
        9223372036854775807.intToTime() > 9223372036854775806.intToTime()
        !(0.intToTime() > 1.intToTime())
        !(0.intToTime() > 9223372036854775807.intToTime())
        !(9223372036854775806.intToTime() > 9223372036854775807.intToTime())
        !(0.intToTime() > 0.intToTime())
        !(1.intToTime() > 1.intToTime())
        !(9223372036854775807.intToTime() > 9223372036854775807.intToTime())
        1.intToTime() >= 0.intToTime()
        9223372036854775807.intToTime() >= 0.intToTime()
        9223372036854775807.intToTime() >= 9223372036854775806.intToTime()
        0.intToTime() >= 0.intToTime()
        1.intToTime() >= 1.intToTime()
        9223372036854775807.intToTime() >= 9223372036854775807.intToTime()
        !(0.intToTime() >= 1.intToTime())
        !(0.intToTime() >= 9223372036854775807.intToTime())
        !(9223372036854775806.intToTime() >= 9223372036854775807.intToTime())
        0.intToTime() < 1.intToTime()
        0.intToTime() < 9223372036854775807.intToTime()
        9223372036854775806.intToTime() < 9223372036854775807.intToTime()
        !(1.intToTime() < 0.intToTime())
        !(9223372036854775807.intToTime() < 0.intToTime())
        !(9223372036854775807.intToTime() < 9223372036854775806.intToTime())
        !(0.intToTime() < 0.intToTime())
        !(1.intToTime() < 1.intToTime())
        !(9223372036854775807.intToTime() < 9223372036854775807.intToTime())
        0.intToTime() <= 1.intToTime()
        0.intToTime() <= 9223372036854775807.intToTime()
        9223372036854775806.intToTime() <= 9223372036854775807.intToTime()
        0.intToTime() <= 0.intToTime()
        1.intToTime() <= 1.intToTime()
        9223372036854775807.intToTime() <= 9223372036854775807.intToTime()
        !(1.intToTime() <= 0.intToTime())
        !(9223372036854775807.intToTime() <= 0.intToTime())
        !(9223372036854775807.intToTime() <= 9223372036854775806.intToTime())

#noinline
def testTime_StringWriter(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        143247935392873.intToTime().toString() == "14.05.4541316 04:41:13"
        91738515201574.intToTime().toString() == "27.10.2909047 09:19:34"
        151196001096321.intToTime().toString() == "17.07.4793180 09:25:21"
        148136164467430.intToTime().toString() == "07.03.4696218 14:17:10"
        26772149863128.intToTime().toString() == "28.08.850345 15:18:48"
        95681828552341.intToTime().toString() == "12.06.3034006 04:59:01"
        92406549063770.intToTime().toString() == "20.12.2930216 19:02:50"
        67851522948614.intToTime().toString() == "02.03.2152099 15:30:14"
        1078057115.intToTime().toString() == "29.02.2004 12:18:35"
        1077970715.intToTime().toString() == "28.02.2004 12:18:35"
        1046391515.intToTime().toString() == "28.02.2003 00:18:35"
        11486647115.intToTime().toString() == "31.12.2333 07:18:35"
        200999324.intToTime().toString() == "15.05.1976 09:08:44"
        823676.intToTime().toString() == "10.01.1970 12:47:56"
        293523555.intToTime().toString() == "21.04.1979 06:19:15"
        144938631.intToTime().toString() == "05.08.1974 12:43:51"
        270489404.intToTime().toString() == "28.07.1978 15:56:44"
        167938681.intToTime().toString() == "28.04.1975 17:38:01"
        295041621.intToTime().toString() == "08.05.1979 20:00:21"
        300456127.intToTime().toString() == "10.07.1979 12:02:07"
        320674715.intToTime().toString() == "29.02.1980 12:18:35"
        320588315.intToTime().toString() == "28.02.1980 12:18:35"
        415282715.intToTime().toString() == "28.02.1983 12:18:35"
        946624715.intToTime().toString() == "31.12.1999 07:18:35"

#noinline
def testTime_StringReader(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        Time.fromString("09.05.2762120 22:47:43").timeToInt() == 87101932258063
        Time.fromString("13.10.3696080 19:51:53").timeToInt() == 116574876762713
        Time.fromString("22.05.4979208 11:30:13").timeToInt() == 157066472950213
        Time.fromString("22.11.3890070 01:45:38").timeToInt() == 122696613222338
        Time.fromString("11.12.5222970 11:35:48").timeToInt() == 164758876198548
        Time.fromString("24.09.3033295 14:05:51").timeToInt() == 95659400613951
        Time.fromString("17.09.3247713 06:28:08").timeToInt() == 102425778484088
        Time.fromString("07.02.2105845 02:53:54").timeToInt() == 66391885623234
        Time.fromString("29.02.2004 12:18:35").timeToInt() == 1078057115
        Time.fromString("28.02.2004 12:18:35").timeToInt() == 1077970715
        Time.fromString("28.02.2003 00:18:35").timeToInt() == 1046391515
        Time.fromString("31.12.2333 07:18:35").timeToInt() == 11486647115
        Time.fromString("18.07.1977 07:20:55").timeToInt() == 238058455
        Time.fromString("08.04.1975 21:41:38").timeToInt() == 166225298
        Time.fromString("03.05.1978 11:00:01").timeToInt() == 263041201
        Time.fromString("12.06.1979 15:11:06").timeToInt() == 298048266
        Time.fromString("09.10.1976 07:13:35").timeToInt() == 213693215
        Time.fromString("21.03.1978 00:08:51").timeToInt() == 259286931
        Time.fromString("15.12.1971 18:21:58").timeToInt() == 61669318
        Time.fromString("26.09.1971 03:51:04").timeToInt() == 54705064
        Time.fromString("29.02.1980 12:18:35").timeToInt() == 320674715
        Time.fromString("28.02.1980 12:18:35").timeToInt() == 320588315
        Time.fromString("28.02.1983 12:18:35").timeToInt() == 415282715
        Time.fromString("31.12.1999 07:18:35").timeToInt() == 946624715
        Time.fromString("29.02.2004 00:00:00").timeToInt() == 1078012800
        Time.fromString("01.01.1970 00:00:00").timeToInt() == 0
        Time.fromString("04.12.292277026596 15:30:07").timeToInt() == 9223372036854775807
        Time.fromString("04.12.292277026596 15:30:08") : error_readFromString
        Time.fromString("04.12.292277026597 00:30:08") : error_readFromString
        Time.fromString("04.12.2922770265900 00:30:08") : error_readFromString
        Time.fromString("abddfsdf") : error_readFromString
        Time.fromString("") : error_readFromString
        Time.fromString("31.12.1969 23:59:59") : error_readFromString
        Time.fromString("31.12.0 23:59:59") : error_readFromString
        Time.fromString("00.12.1970 23:59:59") : error_readFromString
        Time.fromString("32.12.1970 23:59:59") : error_readFromString
        Time.fromString("32.12.1970 23:59:59") : error_readFromString
        Time.fromString("01.13.1970 23:59:59") : error_readFromString
        Time.fromString("01.01.1970 24:59:59") : error_readFromString
        Time.fromString("01.01.1970 23:60:59") : error_readFromString
        Time.fromString("01.01.1970 23:00:60") : error_readFromString
        Time.fromString("29.02.2003 00:00:00") : error_readFromString

#noinline
def testTime_Hashable(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        0.intToTime().getHash() == 0.intToTime().getHash()
        1.intToTime().getHash() == 1.intToTime().getHash()
        9223372036854775807.intToTime().getHash() == 9223372036854775807.intToTime().getHash()
        0.intToTime().getRandomizedHash() == 0.intToTime().getRandomizedHash()
        1.intToTime().getRandomizedHash() == 1.intToTime().getRandomizedHash()
        9223372036854775807.intToTime().getRandomizedHash() == 9223372036854775807.intToTime().getRandomizedHash()

#noinline
def testTime_BinarySerializable(write ok Int, write errorsCoordinates List)
    var bytes Bytes = Bytes.createEmpty()
    var position Int = 0
    test: ok, errorsCoordinates
        0.intToTime().serialize(bytes).nothing?()
        bytes == [0, 0, 0, 0, 0, 0, 0, 0].repackTo(Bytes)
        0xfc1b0234.intToTime().serialize(bytes).nothing?()
        bytes == [0, 0, 0, 0, 0, 0, 0, 0, 0x34, 2, 0x1b, 0xfc, 0, 0, 0, 0].repackTo(Bytes)
        Time.deserialize(bytes, position) == 0.intToTime()
        position == 8
        Time.deserialize(bytes, position) == 0xfc1b0234.intToTime()
        position == 16
        Time.deserialize(bytes, position) : error_outOfRange
    position = 0
    test: ok, errorsCoordinates
        Time.deserialize([0, 0, 0, 0, 0, 0, 0].repackTo(Bytes), position) : error_outOfRange
        position == 0
        Time.deserialize([0].repackTo(Bytes), position) : error_outOfRange
        position == 0
        Time.deserialize([].repackTo(Bytes), position) : error_outOfRange
        position == 0
    position = 1
    test: ok, errorsCoordinates
        Time.deserialize([0, 0, 0, 0, 0, 0, 0, 0].repackTo(Bytes), position) : error_outOfRange
        Time.deserialize([0, 255, 255, 255, 255, 255, 255, 255, 255].repackTo(Bytes), position) : error_outOfRange
    position = -1
    test: ok, errorsCoordinates
        Time.deserialize([0, 0, 0, 0, 0, 0, 0, 0].repackTo(Bytes), position) : error_outOfRange
    position = -9223372036854775808
    test: ok, errorsCoordinates
        Time.deserialize([0, 0, 0, 0, 0, 0, 0, 0].repackTo(Bytes), position) : error_outOfRange
    position = 9223372036854775807
    test: ok, errorsCoordinates
        Time.deserialize([0, 0, 0, 0, 0, 0, 0, 0].repackTo(Bytes), position) : error_outOfRange
