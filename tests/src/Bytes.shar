module Main

def intArrayToBytes_Bytes(array Array) Bytes
    var result Bytes = Bytes()
    parse _, int Int = array
        result.addItem(intToByte(int))
    return result

def unsafe_bytes_getCounter(bytes $Any) Int
    return bytes.unsafe_getI64(0)

def testBytes(write ok Int, write errorsCoordinates List)
    testBytes_MemoryManagement(ok, errorsCoordinates)
    testBytes_Equal(ok, errorsCoordinates)
    testBytes_Ordered(ok, errorsCoordinates)
    testBytes_GetFromAToLast(ok, errorsCoordinates)
    testBytes_GetFromFirstToA(ok, errorsCoordinates)
    testBytes_GetRange(ok, errorsCoordinates)
    testBytes_GetItem(ok, errorsCoordinates)
    testBytes_Add(ok, errorsCoordinates)
    testBytes_StringWriter(ok, errorsCoordinates)
    testBytes_StringReader(ok, errorsCoordinates)
    testBytes_Hashed(ok, errorsCoordinates)
    testBytes_Long(ok, errorsCoordinates)
    testBytes_Container(ok, errorsCoordinates)
    testBytes_Copy(ok, errorsCoordinates)
    testBytes_Put(ok, errorsCoordinates)
    testBytes_Iterator(ok, errorsCoordinates)
    testBytes_BinarySerializable(ok, errorsCoordinates)
    testBytes_Swap(ok, errorsCoordinates)
    testBytes_SetItem(ok, errorsCoordinates)
    testBytes_ContainFromAtoB?(ok, errorsCoordinates)
    testBytes_CountFromAtoB(ok, errorsCoordinates)
    testBytes_CountPartFromAtoB(ok, errorsCoordinates)
    testBytes_PartsEqual?(ok, errorsCoordinates)
    testBytes_LookNFromAtoB(ok, errorsCoordinates)
    testBytes_LookNPartFromAtoB(ok, errorsCoordinates)
    testBytes_LookAllFromAtoB(ok, errorsCoordinates)
    testBytes_LookAllPartsFromAtoB(ok, errorsCoordinates)
    testBytes_LookBackNFromAtoB(ok, errorsCoordinates)
    testBytes_LookBackNPartFromAtoB(ok, errorsCoordinates)
    testBytes_Delete$(ok, errorsCoordinates)
    testBytes_Delete(ok, errorsCoordinates)
    testBytes_Replace$(ok, errorsCoordinates)
    testBytes_Replace(ok, errorsCoordinates)
    testBytes_Insert$(ok, errorsCoordinates)
    testBytes_Insert(ok, errorsCoordinates)
    testBytes_InsertPart$(ok, errorsCoordinates)
    testBytes_InsertPart(ok, errorsCoordinates)
    testBytes_Repeat(ok, errorsCoordinates)
    testBytes_RepeatPart(ok, errorsCoordinates)
    testBytes_ReverseFromAtoB(ok, errorsCoordinates)
    testBytes_Dump(ok, errorsCoordinates)
    testBytes_PrepareForThreads(ok, errorsCoordinates)

#noinline
def testBytes_MemoryManagement(write ok Int, write errorsCoordinates List)
    const byte Int = 1
    var bytes1 Bytes = [byte, 2, 3].intArrayToBytes_Bytes()
    var bytes2 Bytes = bytes1
    var bytes3 Bytes = [byte, 2, 3].intArrayToBytes_Bytes()
    test: ok, errorsCoordinates
        unsafe_bytes_getCounter(bytes1) == 2
        unsafe_bytes_getCounter(bytes2) == 2
        unsafe_bytes_getCounter(bytes3) == 1
    var allOk Bool = false
    var count Int = 0
    try
        parse :(parse) index, byte_ = bytes1
            count++
            allOk = index.inRange?(0, 3) && byte_.type?(Byte)
            if !allOk
                end parse
    catch
        count = 0
    test: ok, errorsCoordinates
        allOk
        count == 3
        unsafe_bytes_getCounter(bytes1) == 2
    bytes1.shar__rc_free()
    test: ok, errorsCoordinates
        unsafe_bytes_getCounter(bytes1) == 1
        unsafe_bytes_getCounter(bytes2) == 1
    bytes1.shar__rc_use()
    test: ok, errorsCoordinates
        unsafe_bytes_getCounter(bytes1) == 2
        unsafe_bytes_getCounter(bytes2) == 2
    bytes2 = [1, 2, 3].intArrayToBytes_Bytes()
    test: ok, errorsCoordinates
        unsafe_bytes_getCounter(bytes1) == 1
        unsafe_bytes_getCounter(bytes2) == 1
    bytes1.shar__to_const()
    const bytes4 Bytes = bytes3
    const bytes5 Bytes = [1].intArrayToBytes_Bytes()
    test: ok, errorsCoordinates
        unsafe_bytes_getCounter(bytes1) == 0
        unsafe_bytes_getCounter(bytes2) == 1
        unsafe_bytes_getCounter(bytes3) == 2
        unsafe_bytes_getCounter(bytes4) == 2
        bytes1.use?()
        !bytes2.use?()
        bytes3.use?()
        bytes4.use?()
        !bytes5.use?()
        bytes1.constant?()
        !bytes2.constant?()
        !bytes3.constant?()
        !bytes4.constant?()
        !bytes5.constant?()
    bytes1 = bytes1.clone()
    bytes2 = bytes3.clone()
    test: ok, errorsCoordinates
        unsafe_bytes_getCounter(bytes1) == 1
        unsafe_bytes_getCounter(bytes2) == 1
        unsafe_bytes_getCounter(bytes3) == 2
        unsafe_bytes_getCounter(bytes4) == 2
        unsafe_bytes_getCounter(bytes5) == 1
        !bytes1.use?()
        !bytes1.constant?()
        !bytes2.use?()
        !bytes2.constant?()
    test: ok, errorsCoordinates
        unsafe_bytes_getCounter(bytes1) == 1
        unsafe_bytes_getCounter(bytes2) == 1
        unsafe_bytes_getCounter(bytes3) == 2
        unsafe_bytes_getCounter(bytes4) == 2
        unsafe_bytes_getCounter(bytes5) == 1
        !bytes1.use?()
        !bytes1.constant?()
        !bytes2.use?()
        !bytes2.constant?()
    allOk = false
    bytes1 = Bytes()
    try
        for :(i Int = 0) i < 256; i++
            bytes1.addItem(intToByte(i))
        bytes2 = bytes1
        for :(i Int = 1) i < 150; i++
            bytes1.setItem(i, intToByte(i + 1))
        allOk = bytes1[0] == intToByte(0)
        if allOk
            for :(i Int = 1) i < 150; i++
                allOk = bytes1[i] == intToByte(i + 1)
                if !allOk
                    end i
        if allOk
            for :(i Int = 150) i < 256; i++
                allOk = bytes1[i] == intToByte(i)
                if !allOk
                    end i
        if allOk
            for :(i Int = 0) i < 256; i++
                allOk = bytes2[i] == intToByte(i)
                if !allOk
                    end i
        bytes3 = bytes2
        for :(i Int = 256) i < 400; i++
            bytes2.addItem(intToByte(i % 256))
        allOk = allOk && bytes1[0] == intToByte(0)
        if allOk
            for :(i Int = 1) i < 150; i++
                allOk = bytes1[i] == intToByte(i + 1)
                if !allOk
                    end i
        if allOk
            for :(i Int = 150) i < 256; i++
                allOk = bytes1[i] == intToByte(i)
                if !allOk
                    end i
        if allOk
            for :(i Int = 0) i < 400; i++
                allOk = bytes2[i] == intToByte(i % 256)
                if !allOk
                    end i
    catch
        nothing
    test: ok, errorsCoordinates
        allOk
        bytes1.length() == 256
        bytes2.length() == 400
        bytes3.length() == 256

#noinline
def testBytes_Equal(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        Bytes() == Bytes()
        Bytes() != [1].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes() != Bytes()
        [1].intArrayToBytes_Bytes() == [1].intArrayToBytes_Bytes()
        [0].intArrayToBytes_Bytes() == [0].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes() != [11].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes() != [2].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes() != [21].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes() != [12].intArrayToBytes_Bytes()
        [11].intArrayToBytes_Bytes() != [1].intArrayToBytes_Bytes()
        [2].intArrayToBytes_Bytes() != [1].intArrayToBytes_Bytes()
        [21].intArrayToBytes_Bytes() != [1].intArrayToBytes_Bytes()
        [12].intArrayToBytes_Bytes() != [1].intArrayToBytes_Bytes()
        [12, 13, 14].intArrayToBytes_Bytes() == [12, 13, 14].intArrayToBytes_Bytes()
        [12, 13, 14].intArrayToBytes_Bytes() != [12, 13, 13].intArrayToBytes_Bytes()
        [12, 13, 14].intArrayToBytes_Bytes() != [12, 13].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() == [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()

#noinline
def testBytes_Ordered(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        [2, 2, 2].intArrayToBytes_Bytes()  > [1, 2, 2].intArrayToBytes_Bytes()
        [2, 2, 3].intArrayToBytes_Bytes()  > [2, 2, 2].intArrayToBytes_Bytes()
        [2, 2, 2, 2].intArrayToBytes_Bytes()  > [2, 2, 2].intArrayToBytes_Bytes()
        [2, 2, 2, 2].intArrayToBytes_Bytes()  > [2, 2, 2].intArrayToBytes_Bytes()
        [1, 1, 2].intArrayToBytes_Bytes()  > [1, 1, 1, 2].intArrayToBytes_Bytes()
        [2, 2, 2, 2].intArrayToBytes_Bytes()  > [2, 2, 2].intArrayToBytes_Bytes()
        [2].intArrayToBytes_Bytes() > Bytes()
        [2, 2, 2].intArrayToBytes_Bytes()  > [1, 2, 2].intArrayToBytes_Bytes()
        !([1, 2, 2].intArrayToBytes_Bytes()  > [2, 2, 2].intArrayToBytes_Bytes() )
        !([2, 2, 2].intArrayToBytes_Bytes()  > [2, 2, 2].intArrayToBytes_Bytes() )
        !([2, 2, 2].intArrayToBytes_Bytes()  > [2, 2, 2, 2].intArrayToBytes_Bytes() )
        !([2, 2, 2].intArrayToBytes_Bytes()  > [2, 2, 2, 2].intArrayToBytes_Bytes() )
        !([1, 1, 1, 2].intArrayToBytes_Bytes()  > [1, 1, 2].intArrayToBytes_Bytes() )
        !([2, 2, 2].intArrayToBytes_Bytes()  > [2, 2, 2, 2].intArrayToBytes_Bytes() )
        !([2, 2].intArrayToBytes_Bytes()  > [2, 2].intArrayToBytes_Bytes() )
        !(Bytes() > [2].intArrayToBytes_Bytes())
        !(Bytes() > Bytes())
        [1, 2, 2].intArrayToBytes_Bytes()  < [2, 2, 2].intArrayToBytes_Bytes()
        [2, 2, 2].intArrayToBytes_Bytes()  < [2, 2, 3].intArrayToBytes_Bytes()
        [2, 2, 2].intArrayToBytes_Bytes()  < [2, 2, 2, 2].intArrayToBytes_Bytes()
        [2, 2, 2].intArrayToBytes_Bytes()  < [2, 2, 2, 2].intArrayToBytes_Bytes()
        [1, 1, 1, 2].intArrayToBytes_Bytes()  < [1, 1, 2].intArrayToBytes_Bytes()
        [2, 2, 2].intArrayToBytes_Bytes()  < [2, 2, 2, 2].intArrayToBytes_Bytes()
        Bytes() < [2].intArrayToBytes_Bytes()
        [1, 2, 2].intArrayToBytes_Bytes()  < [2, 2, 2].intArrayToBytes_Bytes()
        !([2, 2, 2].intArrayToBytes_Bytes()  < [1, 2, 2].intArrayToBytes_Bytes() )
        !([2, 2, 2].intArrayToBytes_Bytes()  < [2, 2, 2].intArrayToBytes_Bytes() )
        !([2, 2, 2, 2].intArrayToBytes_Bytes()  < [2, 2, 2].intArrayToBytes_Bytes() )
        !([2, 2, 2, 2].intArrayToBytes_Bytes()  < [2, 2, 2].intArrayToBytes_Bytes() )
        !([1, 1, 2].intArrayToBytes_Bytes()  < [1, 1, 1, 2].intArrayToBytes_Bytes() )
        !([2, 2, 2, 2].intArrayToBytes_Bytes()  < [2, 2, 2].intArrayToBytes_Bytes() )
        !([2, 2].intArrayToBytes_Bytes()  < [2, 2].intArrayToBytes_Bytes() )
        !([2].intArrayToBytes_Bytes() < Bytes())
        !(Bytes() < Bytes())
        [2, 2, 2].intArrayToBytes_Bytes()  >= [1, 2, 2].intArrayToBytes_Bytes()
        [2, 2, 2].intArrayToBytes_Bytes()  >= [2, 2, 2].intArrayToBytes_Bytes()
        [2, 2, 2, 2].intArrayToBytes_Bytes()  >= [2, 2, 2].intArrayToBytes_Bytes()
        [2, 2, 2, 2].intArrayToBytes_Bytes()  >= [2, 2, 2].intArrayToBytes_Bytes()
        [1, 1, 2].intArrayToBytes_Bytes()  >= [1, 1, 1, 2].intArrayToBytes_Bytes()
        [2, 2, 2, 2].intArrayToBytes_Bytes()  >= [2, 2, 2].intArrayToBytes_Bytes()
        [2].intArrayToBytes_Bytes() >= Bytes()
        [2, 2, 2].intArrayToBytes_Bytes()  >= [1, 2, 2].intArrayToBytes_Bytes()
        [2, 2].intArrayToBytes_Bytes()  >= [2, 2].intArrayToBytes_Bytes()
        Bytes() >= Bytes()
        !([1, 2, 2].intArrayToBytes_Bytes()  >= [2, 2, 2].intArrayToBytes_Bytes() )
        !([2, 2, 1].intArrayToBytes_Bytes()  >= [2, 2, 2].intArrayToBytes_Bytes() )
        !([2, 2, 2].intArrayToBytes_Bytes()  >= [2, 2, 2, 2].intArrayToBytes_Bytes() )
        !([2, 2, 2].intArrayToBytes_Bytes()  >= [2, 2, 2, 2].intArrayToBytes_Bytes() )
        !([1, 1, 1, 2].intArrayToBytes_Bytes()  >= [1, 1, 2].intArrayToBytes_Bytes() )
        !([2, 2, 2].intArrayToBytes_Bytes()  >= [2, 2, 2, 2].intArrayToBytes_Bytes() )
        !(Bytes() >= [2].intArrayToBytes_Bytes())
        [1, 2, 2].intArrayToBytes_Bytes()  <= [2, 2, 2].intArrayToBytes_Bytes()
        [2, 2, 2].intArrayToBytes_Bytes()  <= [2, 2, 2].intArrayToBytes_Bytes()
        [2, 2, 2].intArrayToBytes_Bytes()  <= [2, 2, 2, 2].intArrayToBytes_Bytes()
        [2, 2, 2].intArrayToBytes_Bytes()  <= [2, 2, 2, 2].intArrayToBytes_Bytes()
        [1, 1, 1, 2].intArrayToBytes_Bytes()  <= [1, 1, 2].intArrayToBytes_Bytes()
        [2, 2, 2].intArrayToBytes_Bytes()  <= [2, 2, 2, 2].intArrayToBytes_Bytes()
        Bytes() <= [2].intArrayToBytes_Bytes()
        [1, 2, 2].intArrayToBytes_Bytes()  <= [2, 2, 2].intArrayToBytes_Bytes()
        [2, 2].intArrayToBytes_Bytes()  <= [2, 2].intArrayToBytes_Bytes()
        Bytes() <= Bytes()
        !([2, 2, 2].intArrayToBytes_Bytes()  <= [1, 2, 2].intArrayToBytes_Bytes() )
        !([2, 2, 2].intArrayToBytes_Bytes()  <= [2, 2, 1].intArrayToBytes_Bytes() )
        !([2, 2, 2, 2].intArrayToBytes_Bytes()  <= [2, 2, 2].intArrayToBytes_Bytes() )
        !([2, 2, 2, 2].intArrayToBytes_Bytes()  <= [2, 2, 2].intArrayToBytes_Bytes() )
        !([1, 1, 2].intArrayToBytes_Bytes()  <= [1, 1, 1, 2].intArrayToBytes_Bytes() )
        !([2, 2, 2, 2].intArrayToBytes_Bytes()  <= [2, 2, 2].intArrayToBytes_Bytes() )
        !([2].intArrayToBytes_Bytes() <= Bytes())
        [0, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 6].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes())
        !([2, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 8].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes())
        [0, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 6].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()
        !([2, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 8].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes())
        [2, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 8].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes())
        !([0, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 6].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes())
        [2, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 8].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()
        !([0, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 6].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes())
        [0, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes())
        !([2, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes())
        [0, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        !([2, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes())
        [2, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes())
        !([0, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes())
        [2, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        !([0, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes())
        [0, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 0].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes())
        !([2, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 2].intArrayToBytes_Bytes() < [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes())
        [0, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 0].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()
        !([2, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 2].intArrayToBytes_Bytes() <= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes())
        [2, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 2].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes())
        !([0, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 0].intArrayToBytes_Bytes() > [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes())
        [2, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 2].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()
        !([0, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes())
        !([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 0].intArrayToBytes_Bytes() >= [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes())
        compare([0, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[less].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[less].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[less].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 6].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[less].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[equal].unsafe_getValue()
        compare([2, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[great].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[great].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[great].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 8].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[great].unsafe_getValue()
        compare([0, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[less].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[less].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[less].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[less].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[equal].unsafe_getValue()
        compare([2, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[great].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[great].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[great].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[great].unsafe_getValue()
        compare([0, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[less].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[less].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[less].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 0].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[less].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[equal].unsafe_getValue()
        compare([2, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[great].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[great].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[great].unsafe_getValue()
        compare([1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 2].intArrayToBytes_Bytes(), [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1].intArrayToBytes_Bytes()).unsafe_getValue() == CompareResult[great].unsafe_getValue()

#noinline
def testBytes_GetFromAToLast(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        [].intArrayToBytes_Bytes()[0:] == [].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes()[1:] == [].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes()[0:] == [1].intArrayToBytes_Bytes()
        [1, 2].intArrayToBytes_Bytes()[2:] == [].intArrayToBytes_Bytes()
        [1, 2].intArrayToBytes_Bytes()[1:] == [2].intArrayToBytes_Bytes()
        [1, 2].intArrayToBytes_Bytes()[0:] == [1, 2].intArrayToBytes_Bytes()
        [].intArrayToBytes_Bytes()[-9223372036854775808:] : eid_outOfRange
        [].intArrayToBytes_Bytes()[9223372036854775807:] : eid_outOfRange
        [].intArrayToBytes_Bytes()[-1:] : eid_outOfRange
        [].intArrayToBytes_Bytes()[1:] : eid_outOfRange
        [].intArrayToBytes_Bytes()[2:] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[0:] == [1, 2, 3].intArrayToBytes_Bytes()
        [1, 2, 3].intArrayToBytes_Bytes()[1:] == [2, 3].intArrayToBytes_Bytes()
        [1, 2, 3].intArrayToBytes_Bytes()[2:] == [3].intArrayToBytes_Bytes()
        [1, 2, 3].intArrayToBytes_Bytes()[3:] == [].intArrayToBytes_Bytes()
        [1, 2, 3].intArrayToBytes_Bytes()[-9223372036854775808:] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[9223372036854775807:] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[-1:] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[4:] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[5:] : eid_outOfRange

#noinline
def testBytes_GetFromFirstToA(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        [].intArrayToBytes_Bytes()[:0] == [].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes()[:1] == [1].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes()[:0] == [].intArrayToBytes_Bytes()
        [1, 2].intArrayToBytes_Bytes()[:2] == [1, 2].intArrayToBytes_Bytes()
        [1, 2].intArrayToBytes_Bytes()[:1] == [1].intArrayToBytes_Bytes()
        [1, 2].intArrayToBytes_Bytes()[:0] == [].intArrayToBytes_Bytes()
        [].intArrayToBytes_Bytes()[:-9223372036854775808] : eid_outOfRange
        [].intArrayToBytes_Bytes()[:9223372036854775807] : eid_outOfRange
        [].intArrayToBytes_Bytes()[:-1] : eid_outOfRange
        [].intArrayToBytes_Bytes()[:1] : eid_outOfRange
        [].intArrayToBytes_Bytes()[:2] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[:0] == [].intArrayToBytes_Bytes()
        [1, 2, 3].intArrayToBytes_Bytes()[:1] == [1].intArrayToBytes_Bytes()
        [1, 2, 3].intArrayToBytes_Bytes()[:2] == [1, 2].intArrayToBytes_Bytes()
        [1, 2, 3].intArrayToBytes_Bytes()[:3] == [1, 2, 3].intArrayToBytes_Bytes()
        [1, 2, 3].intArrayToBytes_Bytes()[:-9223372036854775808] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[:9223372036854775807] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[:-1] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[:4] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[:5] : eid_outOfRange

#noinline
def testBytes_GetRange(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        Bytes()[0:0] == Bytes()
        [1].intArrayToBytes_Bytes()[0:0] == Bytes()
        [1].intArrayToBytes_Bytes()[0:1] == [1].intArrayToBytes_Bytes()
        [1, 2].intArrayToBytes_Bytes()[0:0] == Bytes()
        [1, 2].intArrayToBytes_Bytes()[0:1] == [1].intArrayToBytes_Bytes()
        [1, 2].intArrayToBytes_Bytes()[1:2] == [2].intArrayToBytes_Bytes()
        [1, 2].intArrayToBytes_Bytes()[0:2] == [1, 2].intArrayToBytes_Bytes()
        [1, 2].intArrayToBytes_Bytes()[2:2] == Bytes()
        Bytes()[-9223372036854775808:-9223372036854775808] : eid_outOfRange
        Bytes()[-9223372036854775808:-1] : eid_outOfRange
        Bytes()[-9223372036854775808:9223372036854775807] : eid_outOfRange
        Bytes()[9223372036854775807:9223372036854775807] : eid_outOfRange
        Bytes()[-1:-1] : eid_outOfRange
        Bytes()[-1:0] : eid_outOfRange
        Bytes()[0:-1] : eid_outOfRange
        Bytes()[0:1] : eid_outOfRange
        Bytes()[1:0] : eid_outOfRange
        Bytes()[1:1] : eid_outOfRange
        Bytes()[2:1] : eid_outOfRange
        Bytes()[2:0] : eid_outOfRange
        Bytes()[2:-1] : eid_outOfRange
        Bytes()[2:-9223372036854775808] : eid_outOfRange
        Bytes()[2:9223372036854775807] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[0:3] == [1, 2, 3].intArrayToBytes_Bytes()
        [1, 2, 3].intArrayToBytes_Bytes()[1:3] == [2, 3].intArrayToBytes_Bytes()
        [1, 2, 3].intArrayToBytes_Bytes()[0:2] == [1, 2].intArrayToBytes_Bytes()
        [1, 2, 3].intArrayToBytes_Bytes()[-9223372036854775808:-9223372036854775808] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[-9223372036854775808:-1] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[-9223372036854775808:9223372036854775807] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[9223372036854775807:9223372036854775807] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[-1:-1] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[-1:0] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[0:-1] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[1:0] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[2:1] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[2:0] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[2:-1] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[2:-9223372036854775808] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[2:9223372036854775807] : eid_outOfRange

#noinline
def testBytes_GetItem(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        Bytes()[0] : eid_outOfRange
        Bytes()[1] : eid_outOfRange
        Bytes()[-1] : eid_outOfRange
        Bytes()[-9223372036854775808] : eid_outOfRange
        Bytes()[9223372036854775807] : eid_outOfRange
        [1].intArrayToBytes_Bytes()[0] == intToByte(1)
        [1].intArrayToBytes_Bytes()[1] : eid_outOfRange
        [1].intArrayToBytes_Bytes()[-1] : eid_outOfRange
        [1].intArrayToBytes_Bytes()[-9223372036854775808] : eid_outOfRange
        [1].intArrayToBytes_Bytes()[9223372036854775807] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[0] == intToByte(1)
        [1, 2, 3].intArrayToBytes_Bytes()[1] == intToByte(2)
        [1, 2, 3].intArrayToBytes_Bytes()[2] == intToByte(3)
        [255].intArrayToBytes_Bytes()[0] == intToByte(255)
        [1, 2, 3].intArrayToBytes_Bytes()[3] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[-1] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[-9223372036854775808] : eid_outOfRange
        [1, 2, 3].intArrayToBytes_Bytes()[9223372036854775807] : eid_outOfRange

#noinline
def testBytes_Add(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        Bytes() + Bytes() == Bytes()
        Bytes() + [1].intArrayToBytes_Bytes() == [1].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes() + Bytes() == [1].intArrayToBytes_Bytes()
        Bytes() + [1, 2].intArrayToBytes_Bytes() == [1, 2].intArrayToBytes_Bytes()
        [1, 2].intArrayToBytes_Bytes() + Bytes() == [1, 2].intArrayToBytes_Bytes()
        [1, 2].intArrayToBytes_Bytes() + [3].intArrayToBytes_Bytes() == [1, 2, 3].intArrayToBytes_Bytes()
        [0].intArrayToBytes_Bytes() + [1, 2].intArrayToBytes_Bytes() == [0, 1, 2].intArrayToBytes_Bytes()
        [1, 2].intArrayToBytes_Bytes() + [3, 4].intArrayToBytes_Bytes() == [1, 2, 3, 4].intArrayToBytes_Bytes()
        [1, 0].intArrayToBytes_Bytes() + [1, 2].intArrayToBytes_Bytes() == [1, 0, 1, 2].intArrayToBytes_Bytes()
    var bytes1 Bytes  = Bytes()
    var bytes2 Bytes  = Bytes()
    var bytes3 Bytes  = Bytes()
    var bytes4 Bytes  = [1, 2].intArrayToBytes_Bytes()
    var bytes5 Bytes  = [1, 2].intArrayToBytes_Bytes()
    var bytes6 Bytes = [0].intArrayToBytes_Bytes()
    var bytes7 Bytes = Bytes()
    var bytes8 Bytes = [1, 2].intArrayToBytes_Bytes()
    var bytes9 Bytes = [1, 0].intArrayToBytes_Bytes()
    test: ok, errorsCoordinates
        (bytes1 += Bytes()).nothing?()
        bytes1 == Bytes()
        (bytes2 += [1].intArrayToBytes_Bytes()).nothing?()
        bytes2 == [1].intArrayToBytes_Bytes()
        (bytes3 += [1].intArrayToBytes_Bytes()).nothing?()
        bytes3 == [1].intArrayToBytes_Bytes()
        (bytes4 += Bytes()).nothing?()
        bytes4 == [1, 2].intArrayToBytes_Bytes()
        (bytes5 += [3].intArrayToBytes_Bytes()).nothing?()
        bytes5 == [1, 2, 3].intArrayToBytes_Bytes()
        (bytes6 += [1, 2].intArrayToBytes_Bytes()).nothing?()
        bytes6 == [0, 1, 2].intArrayToBytes_Bytes()
        (bytes7 += [1, 2].intArrayToBytes_Bytes()).nothing?()
        bytes7 == [1, 2].intArrayToBytes_Bytes()
        (bytes8 += [3, 4].intArrayToBytes_Bytes()).nothing?()
        bytes8 == [1, 2, 3, 4].intArrayToBytes_Bytes()
        (bytes9 += [1, 2].intArrayToBytes_Bytes()).nothing?()
        bytes9 == [1, 0, 1, 2].intArrayToBytes_Bytes()
    bytes1 = Bytes().clone()
    bytes2 = Bytes().clone()
    bytes3 = [1].intArrayToBytes_Bytes().clone()
    bytes4 = [1, 2].intArrayToBytes_Bytes().clone()
    bytes5 = [1, 2].intArrayToBytes_Bytes().clone()
    bytes6 = [0].intArrayToBytes_Bytes().clone()
    bytes7 = Bytes().clone()
    bytes8 = [1, 2].intArrayToBytes_Bytes().clone()
    bytes9 = [1, 0].intArrayToBytes_Bytes().clone()
    test: ok, errorsCoordinates
        (bytes1 += Bytes()).nothing?()
        bytes1 == Bytes()
        (bytes2 += [1].intArrayToBytes_Bytes()).nothing?()
        bytes2 == [1].intArrayToBytes_Bytes()
        (bytes3 += Bytes()).nothing?()
        bytes3 == [1].intArrayToBytes_Bytes()
        (bytes4 += Bytes()).nothing?()
        bytes4 == [1, 2].intArrayToBytes_Bytes()
        (bytes5 += [3].intArrayToBytes_Bytes()).nothing?()
        bytes5 == [1, 2, 3].intArrayToBytes_Bytes()
        (bytes6 += [1, 2].intArrayToBytes_Bytes()).nothing?()
        bytes6 == [0, 1, 2].intArrayToBytes_Bytes()
        (bytes7 += [1, 2].intArrayToBytes_Bytes()).nothing?()
        bytes7 == [1, 2].intArrayToBytes_Bytes()
        (bytes8 += [3, 4].intArrayToBytes_Bytes()).nothing?()
        bytes8 == [1, 2, 3, 4].intArrayToBytes_Bytes()
        (bytes9 += [1, 2].intArrayToBytes_Bytes()).nothing?()
        bytes9 == [1, 0, 1, 2].intArrayToBytes_Bytes()

#noinline
def testBytes_StringWriter(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        Bytes().toString() == ""
        [1].intArrayToBytes_Bytes().toString() == "01"
        [1, 10].intArrayToBytes_Bytes().toString() == "010A"
        [1, 255].intArrayToBytes_Bytes().toString() == "01FF"
        [255, 255].intArrayToBytes_Bytes().toString() == "FFFF"
        [1, 12, 13, 0xf].intArrayToBytes_Bytes().toString() == "010C0D0F"

#noinline
def testBytes_StringReader(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        Bytes.fromString("") == Bytes()
        Bytes.fromString("01") == [1].intArrayToBytes_Bytes()
        Bytes.fromString("010A") == [1, 10].intArrayToBytes_Bytes()
        Bytes.fromString("01FF") == [1, 255].intArrayToBytes_Bytes()
        Bytes.fromString("010C0D0F") == [1, 12, 13, 15].intArrayToBytes_Bytes()
        Bytes.fromString("010c0d0f") == [1, 12, 13, 15].intArrayToBytes_Bytes()
        Bytes.fromString("0") : eid_readFromString
        Bytes.fromString("010") : eid_readFromString
        Bytes.fromString("1g") : eid_readFromString
        Bytes.fromString("F") : eid_readFromString
        Bytes.fromString("GG") : eid_readFromString

#noinline
def testBytes_Hashed(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        Bytes().getHash() == Bytes().getHash()
        Bytes().getRandomizedHash() == Bytes().getRandomizedHash()
        [1].intArrayToBytes_Bytes().getHash() == [1].intArrayToBytes_Bytes().getHash()
        [1].intArrayToBytes_Bytes().getRandomizedHash() == [1].intArrayToBytes_Bytes().getRandomizedHash()
        [1, 0, 1, 2].intArrayToBytes_Bytes().getHash() == [1, 0, 1, 2].intArrayToBytes_Bytes().getHash()
        [1, 0, 1, 2].intArrayToBytes_Bytes().getRandomizedHash() == [1, 0, 1, 2].intArrayToBytes_Bytes().getRandomizedHash()

#noinline
def testBytes_Long(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        Bytes().length() == 0
        [1].intArrayToBytes_Bytes().length() == 1
        [1, 2].intArrayToBytes_Bytes().length() == 2
        [1, 2, 3].intArrayToBytes_Bytes().length() == 3
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0].intArrayToBytes_Bytes().length() == 10

#noinline
def testBytes_Container(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        Bytes().addItem$(intToByte(1)) == [1].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes().addItem$(intToByte(2)) == [1, 2].intArrayToBytes_Bytes()
        [1, 2].intArrayToBytes_Bytes().addItem$(intToByte(3)) == [1, 2, 3].intArrayToBytes_Bytes()
    var bytes1 Bytes = Bytes()
    var bytes2 Bytes = [1, 2].intArrayToBytes_Bytes()
    var bytes3 Bytes = [1].intArrayToBytes_Bytes()
    var bytes4 Bytes = [1, 2].intArrayToBytes_Bytes()
    var bytes5 Bytes = [1, 2].intArrayToBytes_Bytes()
    test: ok, errorsCoordinates
        bytes1.addItem(intToByte(2)).nothing?()
        bytes1 == [2].intArrayToBytes_Bytes()
        bytes2.addItem(intToByte(3)).nothing?()
        bytes2 == [1, 2, 3].intArrayToBytes_Bytes()
        bytes3.addItem(intToByte(4)).nothing?()
        bytes3 == [1, 4].intArrayToBytes_Bytes()
        bytes4.addItem(intToByte(2)).nothing?()
        bytes4 == [1, 2, 2].intArrayToBytes_Bytes()
        bytes5.addItem(intToByte(3)).nothing?()
        bytes5 == [1, 2, 3].intArrayToBytes_Bytes()
    bytes1 = Bytes().clone()
    bytes2 = [1, 2].intArrayToBytes_Bytes().clone()
    bytes3 = [1].intArrayToBytes_Bytes().clone()
    bytes4 = [1, 2].intArrayToBytes_Bytes().clone()
    bytes5 = [1, 2].intArrayToBytes_Bytes().clone()
    test: ok, errorsCoordinates
        bytes1.addItem(intToByte(2)).nothing?()
        bytes1 == [2].intArrayToBytes_Bytes()
        bytes2.addItem(intToByte(3)).nothing?()
        bytes2 == [1, 2, 3].intArrayToBytes_Bytes()
        bytes3.addItem(intToByte(4)).nothing?()
        bytes3 == [1, 4].intArrayToBytes_Bytes()
        bytes4.addItem(intToByte(2)).nothing?()
        bytes4 == [1, 2, 2].intArrayToBytes_Bytes()
        bytes5.addItem(intToByte(3)).nothing?()
        bytes5 == [1, 2, 3].intArrayToBytes_Bytes()
    bytes1 = [1].intArrayToBytes_Bytes()
    bytes2 = [1, 2].intArrayToBytes_Bytes()
    bytes3 = [1, 2].intArrayToBytes_Bytes()
    bytes4 = [1, 2].intArrayToBytes_Bytes()
    bytes5 = [1, 2, 3].intArrayToBytes_Bytes()
    var bytes6 Bytes = Bytes()
    test: ok, errorsCoordinates
        bytes1.setItem(0, intToByte(17)).nothing?()
        bytes1 == [17].intArrayToBytes_Bytes()
        bytes2.setItem(0, intToByte(14)).nothing?()
        bytes2 == [14, 2].intArrayToBytes_Bytes()
        bytes3.setItem(1, intToByte(0)).nothing?()
        bytes3 == [1, 0].intArrayToBytes_Bytes()
        bytes4.setItem(0, intToByte(6)).nothing?()
        bytes4.setItem(1, intToByte(5)).nothing?()
        bytes4 == [6, 5].intArrayToBytes_Bytes()
        bytes5.setItem(2, intToByte(10)).nothing?()
        bytes5 == [1, 2, 10].intArrayToBytes_Bytes()
        bytes6.setItem(0, intToByte(1)) : eid_outOfRange
        bytes6 == Bytes()
        bytes6.setItem(-1, intToByte(1)) : eid_outOfRange
        bytes6 == Bytes()
        bytes6.setItem(1, intToByte(1)) : eid_outOfRange
        bytes6 == Bytes()
        bytes6.setItem(-9223372036854775808, intToByte(1)) : eid_outOfRange
        bytes6 == Bytes()
        bytes6.setItem(9223372036854775807, intToByte(1)) : eid_outOfRange
        bytes6 == Bytes()
        bytes1.setItem(-1, intToByte(1)) : eid_outOfRange
        bytes1 == [17].intArrayToBytes_Bytes()
        bytes1.setItem(1, intToByte(1)) : eid_outOfRange
        bytes1 == [17].intArrayToBytes_Bytes()
        bytes1.setItem(-9223372036854775808, intToByte(1)) : eid_outOfRange
        bytes1 == [17].intArrayToBytes_Bytes()
        bytes1.setItem(9223372036854775807, intToByte(1)) : eid_outOfRange
        bytes1 == [17].intArrayToBytes_Bytes()
        bytes2.setItem(-1, intToByte(1)) : eid_outOfRange
        bytes2 == [14, 2].intArrayToBytes_Bytes()
        bytes2.setItem(2, intToByte(1)) : eid_outOfRange
        bytes2 == [14, 2].intArrayToBytes_Bytes()
        bytes2.setItem(-9223372036854775808, intToByte(1)) : eid_outOfRange
        bytes2 == [14, 2].intArrayToBytes_Bytes()
        bytes2.setItem(9223372036854775807, intToByte(1)) : eid_outOfRange
        bytes2 == [14, 2].intArrayToBytes_Bytes()
    bytes1 = [1].intArrayToBytes_Bytes().clone()
    bytes2 = [1, 2].intArrayToBytes_Bytes().clone()
    bytes3 = [1, 2].intArrayToBytes_Bytes().clone()
    bytes4 = [1, 2].intArrayToBytes_Bytes().clone()
    bytes5 = [1, 2, 3].intArrayToBytes_Bytes().clone()
    bytes6 = Bytes().clone()
    test: ok, errorsCoordinates
        bytes1.setItem(0, intToByte(17)).nothing?()
        bytes1 == [17].intArrayToBytes_Bytes()
        bytes2.setItem(0, intToByte(14)).nothing?()
        bytes2 == [14, 2].intArrayToBytes_Bytes()
        bytes3.setItem(1, intToByte(0)).nothing?()
        bytes3 == [1, 0].intArrayToBytes_Bytes()
        bytes4.setItem(0, intToByte(6)).nothing?()
        bytes4.setItem(1, intToByte(5)).nothing?()
        bytes4 == [6, 5].intArrayToBytes_Bytes()
        bytes5.setItem(2, intToByte(10)).nothing?()
        bytes5 == [1, 2, 10].intArrayToBytes_Bytes()
        bytes6.setItem(0, intToByte(1)) : eid_outOfRange
        bytes6 == Bytes()
        bytes6.setItem(-1, intToByte(1)) : eid_outOfRange
        bytes6 == Bytes()
        bytes6.setItem(1, intToByte(1)) : eid_outOfRange
        bytes6 == Bytes()
        bytes6.setItem(-9223372036854775808, intToByte(1)) : eid_outOfRange
        bytes6 == Bytes()
        bytes6.setItem(9223372036854775807, intToByte(1)) : eid_outOfRange
        bytes6 == Bytes()
        bytes1.setItem(-1, intToByte(1)) : eid_outOfRange
        bytes1 == [17].intArrayToBytes_Bytes()
        bytes1.setItem(1, intToByte(1)) : eid_outOfRange
        bytes1 == [17].intArrayToBytes_Bytes()
        bytes1.setItem(-9223372036854775808, intToByte(1)) : eid_outOfRange
        bytes1 == [17].intArrayToBytes_Bytes()
        bytes1.setItem(9223372036854775807, intToByte(1)) : eid_outOfRange
        bytes1 == [17].intArrayToBytes_Bytes()
        bytes2.setItem(-1, intToByte(1)) : eid_outOfRange
        bytes2 == [14, 2].intArrayToBytes_Bytes()
        bytes2.setItem(2, intToByte(1)) : eid_outOfRange
        bytes2 == [14, 2].intArrayToBytes_Bytes()
        bytes2.setItem(-9223372036854775808, intToByte(1)) : eid_outOfRange
        bytes2 == [14, 2].intArrayToBytes_Bytes()
        bytes2.setItem(9223372036854775807, intToByte(1)) : eid_outOfRange
        bytes2 == [14, 2].intArrayToBytes_Bytes()

#noinline
def testBytes_Copy(write ok Int, write errorsCoordinates List)
    var s1 Bytes = Bytes()
    var s2 Bytes = [1].intArrayToBytes_Bytes()
    var s3 Bytes = [1, 10, 3, 0, 0].intArrayToBytes_Bytes()
    test: ok, errorsCoordinates
        copy(s1, 0, Bytes(), 0, 0).nothing?()
        s1 == Bytes()
        copy(s1, 0, [1].intArrayToBytes_Bytes(), 0, 0).nothing?()
        s1 == Bytes()
        copy(s1, 0, [1, 2].intArrayToBytes_Bytes(), 1, 0).nothing?()
        s1 == Bytes()
        copy(s1, -1, Bytes(), 0, 0) :eid_outOfRange
        s1 == Bytes()
        copy(s1, -9223372036854775808, Bytes(), 0, 0) :eid_outOfRange
        s1 == Bytes()
        copy(s1, 1, Bytes(), 0, 0) :eid_outOfRange
        s1 == Bytes()
        copy(s1, 9223372036854775807, Bytes(), 0, 0) :eid_outOfRange
        s1 == Bytes()
        copy(s1, 0, Bytes(), -1, 0) :eid_outOfRange
        s1 == Bytes()
        copy(s1, 0, Bytes(), -9223372036854775808, 0) :eid_outOfRange
        s1 == Bytes()
        copy(s1, 0, Bytes(), 1, 0) :eid_outOfRange
        s1 == Bytes()
        copy(s1, 0, Bytes(), 9223372036854775807, 0) :eid_outOfRange
        s1 == Bytes()
        copy(s1, 0, Bytes(), 0, -1) :eid_outOfRange
        s1 == Bytes()
        copy(s1, 0, Bytes(), 0, -9223372036854775808) :eid_outOfRange
        s1 == Bytes()
        copy(s1, 0, Bytes(), 0, 1) :eid_outOfRange
        s1 == Bytes()
        copy(s1, 0, Bytes(), 0, 9223372036854775807) :eid_outOfRange
        s1 == Bytes()
        copy(s2, 0, Bytes(), 0, 0).nothing?()
        s2 == [1].intArrayToBytes_Bytes()
        copy(s2, 1, Bytes(), 0, 0).nothing?()
        s2 == [1].intArrayToBytes_Bytes()
        copy(s2, 1, [2].intArrayToBytes_Bytes(), 1, 0).nothing?()
        s2 == [1].intArrayToBytes_Bytes()
        copy(s2, 0, [2].intArrayToBytes_Bytes(), 0, 1).nothing?()
        s2 == [2].intArrayToBytes_Bytes()
        copy(s2, 0, [3, 4, 5].intArrayToBytes_Bytes(), 0, 1).nothing?()
        s2 == [3].intArrayToBytes_Bytes()
        copy(s2, 0, [3, 4, 5].intArrayToBytes_Bytes(), 1, 1).nothing?()
        s2 == [4].intArrayToBytes_Bytes()
        copy(s2, 0, [3, 4, 5].intArrayToBytes_Bytes(), 2, 1).nothing?()
        s2 == [5].intArrayToBytes_Bytes()
        copy(s2, 0, [3, 4, 5].intArrayToBytes_Bytes(), 0, 2) : eid_outOfRange
        s2 == [5].intArrayToBytes_Bytes()
        copy(s2, 1, [3, 4, 5].intArrayToBytes_Bytes(), 0, 1) : eid_outOfRange
        s2 == [5].intArrayToBytes_Bytes()
        copy(s2, 0, [3, 4, 5].intArrayToBytes_Bytes(), 2, 2) : eid_outOfRange
        s2 == [5].intArrayToBytes_Bytes()
        copy(s2, -1, [3, 4, 5].intArrayToBytes_Bytes(), 0, 1) : eid_outOfRange
        s2 == [5].intArrayToBytes_Bytes()
        copy(s2, 2, [3, 4, 5].intArrayToBytes_Bytes(), 0, 0) : eid_outOfRange
        s2 == [5].intArrayToBytes_Bytes()
        copy(s2, 0, [3, 4, 5].intArrayToBytes_Bytes(), -1, 0) : eid_outOfRange
        s2 == [5].intArrayToBytes_Bytes()
        copy(s2, 0, [3, 4, 5].intArrayToBytes_Bytes(), 0, -1) : eid_outOfRange
        s2 == [5].intArrayToBytes_Bytes()
        copy(s3, 0, Bytes(), 0, 0).nothing?()
        s3 == [1, 10, 3, 0, 0].intArrayToBytes_Bytes()
        copy(s3, 1, Bytes(), 0, 0).nothing?()
        s3 == [1, 10, 3, 0, 0].intArrayToBytes_Bytes()
        copy(s3, 4, Bytes(), 0, 0).nothing?()
        s3 == [1, 10, 3, 0, 0].intArrayToBytes_Bytes()
        copy(s3, 0, [1, 2, 3, 4].intArrayToBytes_Bytes(), 0, 0).nothing?()
        s3 == [1, 10, 3, 0, 0].intArrayToBytes_Bytes()
        copy(s3, 0, [7, 2, 3, 4].intArrayToBytes_Bytes(), 0, 1).nothing?()
        s3 == [7, 10, 3, 0, 0].intArrayToBytes_Bytes()
        copy(s3, 1, [7, 2, 3, 4].intArrayToBytes_Bytes(), 0, 4).nothing?()
        s3 == [7, 7, 2, 3, 4].intArrayToBytes_Bytes()
        copy(s3, 2, [7, 2, 3, 4].intArrayToBytes_Bytes(), 2, 2).nothing?()
        s3 == [7, 7, 3, 4, 4].intArrayToBytes_Bytes()
        copy(s3, 5, [7, 2, 3, 4].intArrayToBytes_Bytes(), 4, 0).nothing?()
        s3 == [7, 7, 3, 4, 4].intArrayToBytes_Bytes()
        copy(s3, 5, [7, 2, 3, 4].intArrayToBytes_Bytes(), 5, 0) : eid_outOfRange
        s3 == [7, 7, 3, 4, 4].intArrayToBytes_Bytes()
        copy(s3, 6, [7, 2, 3, 4].intArrayToBytes_Bytes(), 4, 0) : eid_outOfRange
        s3 == [7, 7, 3, 4, 4].intArrayToBytes_Bytes()
        copy(s3, 5, [7, 2, 3, 4].intArrayToBytes_Bytes(), 4, 1) : eid_outOfRange
        s3 == [7, 7, 3, 4, 4].intArrayToBytes_Bytes()
        copy(s3, 5, [7, 2, 3, 4].intArrayToBytes_Bytes(), 4, -1) : eid_outOfRange
        s3 == [7, 7, 3, 4, 4].intArrayToBytes_Bytes()
        copy(s3, -1, [7, 2, 3, 4].intArrayToBytes_Bytes(), 4, 0) : eid_outOfRange
        s3 == [7, 7, 3, 4, 4].intArrayToBytes_Bytes()
        copy(s3, 0, [7, 2, 3, 4].intArrayToBytes_Bytes(), -1, 0) : eid_outOfRange
        s3 == [7, 7, 3, 4, 4].intArrayToBytes_Bytes()

#noinline
def testBytes_Put(write ok Int, write errorsCoordinates List)
    var s1 Bytes = Bytes()
    var s2 Bytes = [10].intArrayToBytes_Bytes()
    var s3 Bytes = [10, 11, 12, 13].intArrayToBytes_Bytes()
    test: ok, errorsCoordinates
        s1.put(0, intToByte(2)) : eid_outOfRange
        s1 == Bytes()
        s1.put(1, intToByte(2)) : eid_outOfRange
        s1 == Bytes()
        s1.put(9223372036854775807, intToByte(2)) : eid_outOfRange
        s1 == Bytes()
        s1.put(-1, intToByte(2)) : eid_outOfRange
        s1 == Bytes()
        s1.put(-9223372036854775808, intToByte(2)) : eid_outOfRange
        s1 == Bytes()
        s2.put(0, intToByte(2)) == intToByte(10)
        s2 == [2].intArrayToBytes_Bytes()
        s2.put(0, intToByte(3)) == intToByte(2)
        s2 == [3].intArrayToBytes_Bytes()
        s2.put(1, intToByte(0)) : eid_outOfRange
        s2 == [3].intArrayToBytes_Bytes()
        s2.put(9223372036854775807, intToByte(0)) : eid_outOfRange
        s2 == [3].intArrayToBytes_Bytes()
        s2.put(-1, intToByte(0)) : eid_outOfRange
        s2 == [3].intArrayToBytes_Bytes()
        s2.put(-9223372036854775808, intToByte(0)) : eid_outOfRange
        s2 == [3].intArrayToBytes_Bytes()
        s3.put(0, intToByte(17)) == intToByte(10)
        s3 == [17, 11, 12, 13].intArrayToBytes_Bytes()
        s3.put(1, intToByte(4)) == intToByte(11)
        s3 == [17, 4, 12, 13].intArrayToBytes_Bytes()
        s3.put(3, intToByte(0)) == intToByte(13)
        s3 == [17, 4, 12, 0].intArrayToBytes_Bytes()
        s3.put(4, intToByte(1)) : eid_outOfRange
        s3 == [17, 4, 12, 0].intArrayToBytes_Bytes()
        s3.put(9223372036854775807, intToByte(1)) : eid_outOfRange
        s3 == [17, 4, 12, 0].intArrayToBytes_Bytes()
        s3.put(-1, intToByte(1)) : eid_outOfRange
        s3 == [17, 4, 12, 0].intArrayToBytes_Bytes()
        s3.put(-9223372036854775808, intToByte(1)) : eid_outOfRange
        s3 == [17, 4, 12, 0].intArrayToBytes_Bytes()

#noinline
def testBytes_Iterator(write ok Int, write errorsCoordinates List)
    var allOk Bool = true
    try
        parse _, _ = Bytes()
            allOk = false
    catch
        allOk = false
    test: ok, errorsCoordinates
        allOk
    allOk = false
    var count Int = 0
    try
        parse :(parse) index, byte = [1, 2, 3, 4, 5].intArrayToBytes_Bytes()
            count++
            allOk = index.inRange?(0, 5) && byte.inRange?(intToByte(1), intToByte(6))
            if !allOk
                end parse
    catch
        count = 0
    test: ok, errorsCoordinates
        allOk
        count == 5

#noinline
def testBytes_BinarySerializable(write ok Int, write errorsCoordinates List)
    var bytes Bytes = Bytes()
    var position Int = 0
    test: ok, errorsCoordinates
        [].intArrayToBytes_Bytes().serialize(bytes).nothing?()
        bytes == [0, 0, 0, 0, 0, 0, 0, 0].intArrayToBytes_Bytes()
        [12].intArrayToBytes_Bytes().serialize(bytes).nothing?()
        bytes == [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 12].intArrayToBytes_Bytes()
        Bytes.deserialize(bytes, position) == [].intArrayToBytes_Bytes()
        position == 8
        Bytes.deserialize(bytes, position) == [12].intArrayToBytes_Bytes()
        position == 17
        Bytes.deserialize(bytes, position) : eid_outOfRange
    position = 0
    test: ok, errorsCoordinates
        Bytes.deserialize([1, 0, 0, 0, 0, 0, 0, 0].intArrayToBytes_Bytes(), position) : eid_outOfRange
        position == 0
        Bytes.deserialize([2, 0, 0, 0, 0, 0, 0, 0, 0].intArrayToBytes_Bytes(), position) : eid_outOfRange
        position == 0
        Bytes.deserialize([0, 0, 0, 0, 0, 0, 0].intArrayToBytes_Bytes(), position) : eid_outOfRange
        position == 0
        Bytes.deserialize([].intArrayToBytes_Bytes(), position) : eid_outOfRange
        position == 0
    position = -1
    test: ok, errorsCoordinates
        Bytes.deserialize([0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 32, 0, 0, 0].intArrayToBytes_Bytes(), position) : eid_outOfRange
    position = -9223372036854775808
    test: ok, errorsCoordinates
        Bytes.deserialize([0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 32, 0, 0, 0].intArrayToBytes_Bytes(), position) : eid_outOfRange
    position = 9223372036854775807
    test: ok, errorsCoordinates
        Bytes.deserialize([0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 32, 0, 0, 0].intArrayToBytes_Bytes(), position) : eid_outOfRange

#noinline
def testBytes_Swap(write ok Int, write errorsCoordinates List)
    var a1 Bytes = Bytes()
    var a2 Bytes = [1].intArrayToBytes_Bytes()
    var a3 Bytes = [1, 2].intArrayToBytes_Bytes()
    var a4 Bytes = [1, 2, 3].intArrayToBytes_Bytes()
    var a5 Bytes = [1, 2, 3, 4, 5].intArrayToBytes_Bytes()
    test: ok, errorsCoordinates
        a1.swap(0, 0) : eid_outOfRange
        a1 == [].intArrayToBytes_Bytes()
        a1.swap(-1, 0) : eid_outOfRange
        a1 == [].intArrayToBytes_Bytes()
        a1.swap(-1, -1) : eid_outOfRange
        a1 == [].intArrayToBytes_Bytes()
        a1.swap(0, -1) : eid_outOfRange
        a1 == [].intArrayToBytes_Bytes()
        a1.swap(9223372036854775807, 0) : eid_outOfRange
        a1 == [].intArrayToBytes_Bytes()
        a1.swap(0, 9223372036854775807) : eid_outOfRange
        a1 == [].intArrayToBytes_Bytes()
        a1.swap(0, 1) : eid_outOfRange
        a1 == [].intArrayToBytes_Bytes()
        a1.swap(1, 1) : eid_outOfRange
        a1 == [].intArrayToBytes_Bytes()
        a1.swap(1, 0) : eid_outOfRange
        a1 == [].intArrayToBytes_Bytes()
        a1.swap(-9223372036854775808, 9223372036854775807) : eid_outOfRange
        a1 == [].intArrayToBytes_Bytes()
        a2.swap(0, 0).nothing?()
        a2 == [1].intArrayToBytes_Bytes()
        a2.swap(1, 1) : eid_outOfRange
        a2 == [1].intArrayToBytes_Bytes()
        a2.swap(-1, 0) : eid_outOfRange
        a2 == [1].intArrayToBytes_Bytes()
        a2.swap(-1, -1) : eid_outOfRange
        a2 == [1].intArrayToBytes_Bytes()
        a2.swap(0, -1) : eid_outOfRange
        a2 == [1].intArrayToBytes_Bytes()
        a2.swap(9223372036854775807, 0) : eid_outOfRange
        a2 == [1].intArrayToBytes_Bytes()
        a2.swap(0, 9223372036854775807) : eid_outOfRange
        a2 == [1].intArrayToBytes_Bytes()
        a2.swap(0, 1) : eid_outOfRange
        a2 == [1].intArrayToBytes_Bytes()
        a2.swap(1, 0) : eid_outOfRange
        a2 == [1].intArrayToBytes_Bytes()
        a2.swap(-9223372036854775808, 9223372036854775807) : eid_outOfRange
        a2 == [1].intArrayToBytes_Bytes()
        a3.swap(0, 0).nothing?()
        a3 == [1, 2].intArrayToBytes_Bytes()
        a3.swap(1, 1).nothing?()
        a3 == [1, 2].intArrayToBytes_Bytes()
        a3.swap(0, 1).nothing?()
        a3 == [2, 1].intArrayToBytes_Bytes()
        a3.swap(1, 0).nothing?()
        a3 == [1, 2].intArrayToBytes_Bytes()
        a3.swap(2, 2) : eid_outOfRange
        a3 == [1, 2].intArrayToBytes_Bytes()
        a3.swap(-1, 0) : eid_outOfRange
        a3 == [1, 2].intArrayToBytes_Bytes()
        a3.swap(-1, -1) : eid_outOfRange
        a3 == [1, 2].intArrayToBytes_Bytes()
        a3.swap(0, -1) : eid_outOfRange
        a3 == [1, 2].intArrayToBytes_Bytes()
        a3.swap(9223372036854775807, 0) : eid_outOfRange
        a3 == [1, 2].intArrayToBytes_Bytes()
        a3.swap(0, 9223372036854775807) : eid_outOfRange
        a3 == [1, 2].intArrayToBytes_Bytes()
        a3.swap(0, 2) : eid_outOfRange
        a3 == [1, 2].intArrayToBytes_Bytes()
        a3.swap(2, 0) : eid_outOfRange
        a3 == [1, 2].intArrayToBytes_Bytes()
        a3.swap(-9223372036854775808, 9223372036854775807) : eid_outOfRange
        a3 == [1, 2].intArrayToBytes_Bytes()
        a4.swap(0, 0).nothing?()
        a4 == [1, 2, 3].intArrayToBytes_Bytes()
        a4.swap(1, 1).nothing?()
        a4 == [1, 2, 3].intArrayToBytes_Bytes()
        a4.swap(2, 2).nothing?()
        a4 == [1, 2, 3].intArrayToBytes_Bytes()
        a4.swap(0, 1).nothing?()
        a4 == [2, 1, 3].intArrayToBytes_Bytes()
        a4.swap(1, 0).nothing?()
        a4 == [1, 2, 3].intArrayToBytes_Bytes()
        a4.swap(1, 2).nothing?()
        a4 == [1, 3, 2].intArrayToBytes_Bytes()
        a4.swap(0, 2).nothing?()
        a4 == [2, 3, 1].intArrayToBytes_Bytes()
        a4.swap(2, 0).nothing?()
        a4 == [1, 3, 2].intArrayToBytes_Bytes()
        a4.swap(3, 3) : eid_outOfRange
        a4 == [1, 3, 2].intArrayToBytes_Bytes()
        a4.swap(-1, 0) : eid_outOfRange
        a4 == [1, 3, 2].intArrayToBytes_Bytes()
        a4.swap(-1, -1) : eid_outOfRange
        a4 == [1, 3, 2].intArrayToBytes_Bytes()
        a4.swap(0, -1) : eid_outOfRange
        a4 == [1, 3, 2].intArrayToBytes_Bytes()
        a4.swap(9223372036854775807, 0) : eid_outOfRange
        a4 == [1, 3, 2].intArrayToBytes_Bytes()
        a4.swap(0, 9223372036854775807) : eid_outOfRange
        a4 == [1, 3, 2].intArrayToBytes_Bytes()
        a4.swap(0, 3) : eid_outOfRange
        a4 == [1, 3, 2].intArrayToBytes_Bytes()
        a4.swap(3, 0) : eid_outOfRange
        a4 == [1, 3, 2].intArrayToBytes_Bytes()
        a4.swap(3, 1) : eid_outOfRange
        a4 == [1, 3, 2].intArrayToBytes_Bytes()
        a4.swap(-9223372036854775808, 9223372036854775807) : eid_outOfRange
        a4 == [1, 3, 2].intArrayToBytes_Bytes()
        a5.swap(0, 0).nothing?()
        a5 == [1, 2, 3, 4, 5].intArrayToBytes_Bytes()
        a5.swap(1, 1).nothing?()
        a5 == [1, 2, 3, 4, 5].intArrayToBytes_Bytes()
        a5.swap(2, 2).nothing?()
        a5 == [1, 2, 3, 4, 5].intArrayToBytes_Bytes()
        a5.swap(3, 3).nothing?()
        a5 == [1, 2, 3, 4, 5].intArrayToBytes_Bytes()
        a5.swap(4, 4).nothing?()
        a5 == [1, 2, 3, 4, 5].intArrayToBytes_Bytes()
        a5.swap(0, 1).nothing?()
        a5 == [2, 1, 3, 4, 5].intArrayToBytes_Bytes()
        a5.swap(1, 0).nothing?()
        a5 == [1, 2, 3, 4, 5].intArrayToBytes_Bytes()
        a5.swap(1, 2).nothing?()
        a5 == [1, 3, 2, 4, 5].intArrayToBytes_Bytes()
        a5.swap(0, 2).nothing?()
        a5 == [2, 3, 1, 4, 5].intArrayToBytes_Bytes()
        a5.swap(2, 0).nothing?()
        a5 == [1, 3, 2, 4, 5].intArrayToBytes_Bytes()
        a5.swap(0, 4).nothing?()
        a5 == [5, 3, 2, 4, 1].intArrayToBytes_Bytes()
        a5.swap(4, 0).nothing?()
        a5 == [1, 3, 2, 4, 5].intArrayToBytes_Bytes()
        a5.swap(5, 5) : eid_outOfRange
        a5 == [1, 3, 2, 4, 5].intArrayToBytes_Bytes()
        a5.swap(-1, 0) : eid_outOfRange
        a5 == [1, 3, 2, 4, 5].intArrayToBytes_Bytes()
        a5.swap(-1, -1) : eid_outOfRange
        a5 == [1, 3, 2, 4, 5].intArrayToBytes_Bytes()
        a5.swap(0, -1) : eid_outOfRange
        a5 == [1, 3, 2, 4, 5].intArrayToBytes_Bytes()
        a5.swap(9223372036854775807, 0) : eid_outOfRange
        a5 == [1, 3, 2, 4, 5].intArrayToBytes_Bytes()
        a5.swap(0, 9223372036854775807) : eid_outOfRange
        a5 == [1, 3, 2, 4, 5].intArrayToBytes_Bytes()
        a5.swap(0, 5) : eid_outOfRange
        a5 == [1, 3, 2, 4, 5].intArrayToBytes_Bytes()
        a5.swap(5, 0) : eid_outOfRange
        a5 == [1, 3, 2, 4, 5].intArrayToBytes_Bytes()
        a5.swap(5, 1) : eid_outOfRange
        a5 == [1, 3, 2, 4, 5].intArrayToBytes_Bytes()
        a5.swap(-9223372036854775808, 9223372036854775807) : eid_outOfRange
        a5 == [1, 3, 2, 4, 5].intArrayToBytes_Bytes()
    a1 = [1, 2, 3].intArrayToBytes_Bytes().clone()
    a2 = a1
    test: ok, errorsCoordinates
        a1.swap(0, 2).nothing?()
        a1 == [3, 2, 1].intArrayToBytes_Bytes()
        a2 == [1, 2, 3].intArrayToBytes_Bytes()
        a1.swap(0, -1) : eid_outOfRange
        a1 == [3, 2, 1].intArrayToBytes_Bytes()
        a2 == [1, 2, 3].intArrayToBytes_Bytes()
        a1.swap(0, 3) : eid_outOfRange
        a1 == [3, 2, 1].intArrayToBytes_Bytes()
        a2 == [1, 2, 3].intArrayToBytes_Bytes()
        a1.swap(3, 0) : eid_outOfRange
        a1 == [3, 2, 1].intArrayToBytes_Bytes()
        a2 == [1, 2, 3].intArrayToBytes_Bytes()

#noinline
def testBytes_SetItem(write ok Int, write errorsCoordinates List)
    var a1 Bytes = Bytes()
    var a2 Bytes = [1].intArrayToBytes_Bytes()
    var a3 Bytes = [1, 2].intArrayToBytes_Bytes()
    var a4 Bytes = [1, 2, 3].intArrayToBytes_Bytes()
    test: ok, errorsCoordinates
        a1.setItem(0, intToByte(0)) : eid_outOfRange
        a1 == [].intArrayToBytes_Bytes()
        a1.setItem(-1, intToByte(0)) : eid_outOfRange
        a1 == [].intArrayToBytes_Bytes()
        a1.setItem(9223372036854775807, intToByte(0)) : eid_outOfRange
        a1 == [].intArrayToBytes_Bytes()
        a1.setItem(1, intToByte(1)) : eid_outOfRange
        a1 == [].intArrayToBytes_Bytes()
        a1.setItem(-9223372036854775808, intToByte(0)) : eid_outOfRange
        a1 == [].intArrayToBytes_Bytes()
        a2.setItem(0, intToByte(0)).nothing?()
        a2 == [0].intArrayToBytes_Bytes()
        a2.setItem(-1, intToByte(1)) : eid_outOfRange
        a2 == [0].intArrayToBytes_Bytes()
        a2.setItem(9223372036854775807, intToByte(0)) : eid_outOfRange
        a2 == [0].intArrayToBytes_Bytes()
        a2.setItem(-9223372036854775808, intToByte(0)) : eid_outOfRange
        a2 == [0].intArrayToBytes_Bytes()
        a3.setItem(0, intToByte(0)).nothing?()
        a3 == [0, 2].intArrayToBytes_Bytes()
        a3.setItem(1, intToByte(1)).nothing?()
        a3 == [0, 1].intArrayToBytes_Bytes()
        a3.setItem(2, intToByte(2)) : eid_outOfRange
        a3 == [0, 1].intArrayToBytes_Bytes()
        a3.setItem(-1, intToByte(1)) : eid_outOfRange
        a3 == [0, 1].intArrayToBytes_Bytes()
        a3.setItem(9223372036854775807, intToByte(0)) : eid_outOfRange
        a3 == [0, 1].intArrayToBytes_Bytes()
        a3.setItem(-9223372036854775808, intToByte(0)) : eid_outOfRange
        a3 == [0, 1].intArrayToBytes_Bytes()
        a4.setItem(0, intToByte(0)).nothing?()
        a4 == [0, 2, 3].intArrayToBytes_Bytes()
        a4.setItem(1, intToByte(1)).nothing?()
        a4 == [0, 1, 3].intArrayToBytes_Bytes()
        a4.setItem(2, intToByte(2)).nothing?()
        a4 == [0, 1, 2].intArrayToBytes_Bytes()
        a4.setItem(3, intToByte(3)) : eid_outOfRange
        a4 == [0, 1, 2].intArrayToBytes_Bytes()
        a4.setItem(-1, intToByte(1)) : eid_outOfRange
        a4 == [0, 1, 2].intArrayToBytes_Bytes()
        a4.setItem(9223372036854775807, intToByte(0)) : eid_outOfRange
        a4 == [0, 1, 2].intArrayToBytes_Bytes()
        a4.setItem(-9223372036854775808, intToByte(1)) : eid_outOfRange
        a4 == [0, 1, 2].intArrayToBytes_Bytes()
    a1 = [1, 2, 3].intArrayToBytes_Bytes().clone()
    a2 = a1
    test: ok, errorsCoordinates
        a1.setItem(0, intToByte(4)).nothing?()
        a1 == [4, 2, 3].intArrayToBytes_Bytes()
        a2 == [1, 2, 3].intArrayToBytes_Bytes()
        a1.setItem(-1, intToByte(0)) : eid_outOfRange
        a1 == [4, 2, 3].intArrayToBytes_Bytes()
        a2 == [1, 2, 3].intArrayToBytes_Bytes()

#noinline
def testBytes_ContainFromAtoB?(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        ![].intArrayToBytes_Bytes().containFromAtoB?(intToByte(1), 0, 0)
        ![].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 0, 0)
        ![].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 0, 1) : eid_outOfRange
        ![].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 1, 0) : eid_outOfRange
        ![].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), -1, 0) : eid_outOfRange
        ![].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 0, -1) : eid_outOfRange
        ![].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 0, 9223372036854775807) : eid_outOfRange
        ![].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 0, -9223372036854775808) : eid_outOfRange
        ![].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), -9223372036854775808, 0) : eid_outOfRange
        ![].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), -9223372036854775808, 9223372036854775807) : eid_outOfRange
        ![0].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 0, 0)
        ![0].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 1, 1)
        ![0].intArrayToBytes_Bytes().containFromAtoB?(intToByte(1), 0, 0)
        ![0].intArrayToBytes_Bytes().containFromAtoB?(intToByte(1), 1, 1)
        ![0].intArrayToBytes_Bytes().containFromAtoB?(intToByte(1), 0, 1)
        [0].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 0, 1)
        ![0].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 0, 2) : eid_outOfRange
        ![0].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 2, 0) : eid_outOfRange
        ![0].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), -1, 0) : eid_outOfRange
        ![0].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 0, -1) : eid_outOfRange
        ![0].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 0, 9223372036854775807) : eid_outOfRange
        ![0].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 0, -9223372036854775808) : eid_outOfRange
        ![0].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), -9223372036854775808, 0) : eid_outOfRange
        ![0].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), -9223372036854775808, 9223372036854775807) : eid_outOfRange
        ![0, 1].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 0, 0)
        ![0, 1].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 1, 1)
        ![0, 1].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 2, 2)
        ![0, 1].intArrayToBytes_Bytes().containFromAtoB?(intToByte(2), 0, 2)
        ![0, 1].intArrayToBytes_Bytes().containFromAtoB?(intToByte(2), 0, 1)
        ![0, 1].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 1, 2)
        ![0, 1].intArrayToBytes_Bytes().containFromAtoB?(intToByte(1), 0, 1)
        [0, 1].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 0, 2)
        [0, 1].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 0, 1)
        [0, 1].intArrayToBytes_Bytes().containFromAtoB?(intToByte(1), 0, 2)
        [0, 1].intArrayToBytes_Bytes().containFromAtoB?(intToByte(1), 1, 2)
        ![0, 1].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 0, 3) : eid_outOfRange
        ![0, 1].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 3, 0) : eid_outOfRange
        ![0, 1].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), -1, 0) : eid_outOfRange
        ![0, 1].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 0, -1) : eid_outOfRange
        ![0, 1].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 0, 9223372036854775807) : eid_outOfRange
        ![0, 1].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), 0, -9223372036854775808) : eid_outOfRange
        ![0, 1].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), -9223372036854775808, 0) : eid_outOfRange
        ![0, 1].intArrayToBytes_Bytes().containFromAtoB?(intToByte(0), -9223372036854775808, 9223372036854775807) : eid_outOfRange
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(1), 0, 31)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(1), 0, 1)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(1), 1, 31)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(1), 1, 2)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(31), 0, 31)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(31), 30, 31)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(31), 0, 30)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(31), 31, 31)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 0, 31)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 0, 15)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 14, 31)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 14, 15)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 0, 14)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 15, 31)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 15, 15)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 0, 31)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 0, 16)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 15, 31)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 15, 16)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 0, 15)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 16, 31)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 16, 16)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(32), 0, 31)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(128), 0, 31)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(255), 0, 31)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().containFromAtoB?(intToByte(177), 0, 31)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(1), 0, 32)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(1), 0, 1)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(1), 1, 32)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(1), 1, 2)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(32), 0, 32)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(32), 31, 32)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(32), 0, 31)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(32), 32, 32)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 0, 32)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 0, 15)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 14, 32)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 14, 15)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 0, 14)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 15, 32)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 15, 15)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 0, 32)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 0, 16)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 15, 32)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 15, 16)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 0, 15)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 16, 32)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 16, 16)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(33), 0, 32)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(128), 0, 32)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(255), 0, 32)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().containFromAtoB?(intToByte(177), 0, 32)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(1), 0, 33)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(1), 0, 1)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(1), 1, 33)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(1), 1, 2)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(33), 0, 33)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(33), 32, 33)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(33), 0, 32)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(33), 33, 33)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 0, 33)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 0, 15)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 14, 33)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 14, 15)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 0, 14)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 15, 33)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(15), 15, 15)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 0, 33)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 0, 16)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 15, 33)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 15, 16)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 0, 15)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 16, 33)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(16), 16, 16)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(34), 0, 33)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(128), 0, 33)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(255), 0, 33)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().containFromAtoB?(intToByte(177), 0, 33)

#noinline
def testBytes_CountFromAtoB(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        [].intArrayToBytes_Bytes().countFromAtoB(intToByte(1), 0, 0) == 0
        [].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, 0) == 0
        [].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, 1) : eid_outOfRange
        [].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 1, 0) : eid_outOfRange
        [].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), -1, 0) : eid_outOfRange
        [].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, -1) : eid_outOfRange
        [].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, 9223372036854775807) : eid_outOfRange
        [].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, -9223372036854775808) : eid_outOfRange
        [].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), -9223372036854775808, 0) : eid_outOfRange
        [].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), -9223372036854775808, 9223372036854775807) : eid_outOfRange
        [0].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, 0) == 0
        [0].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 1, 1) == 0
        [0].intArrayToBytes_Bytes().countFromAtoB(intToByte(1), 0, 0) == 0
        [0].intArrayToBytes_Bytes().countFromAtoB(intToByte(1), 1, 1) == 0
        [0].intArrayToBytes_Bytes().countFromAtoB(intToByte(1), 0, 1) == 0
        [0].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, 1) == 1
        [0].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, 2) : eid_outOfRange
        [0].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 2, 0) : eid_outOfRange
        [0].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), -1, 0) : eid_outOfRange
        [0].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, -1) : eid_outOfRange
        [0].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, 9223372036854775807) : eid_outOfRange
        [0].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, -9223372036854775808) : eid_outOfRange
        [0].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), -9223372036854775808, 0) : eid_outOfRange
        [0].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), -9223372036854775808, 9223372036854775807) : eid_outOfRange
        [0, 1].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, 0) == 0
        [0, 1].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 1, 1) == 0
        [0, 1].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 2, 2) == 0
        [0, 1].intArrayToBytes_Bytes().countFromAtoB(intToByte(2), 0, 2) == 0
        [0, 1].intArrayToBytes_Bytes().countFromAtoB(intToByte(2), 0, 1) == 0
        [0, 1].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 1, 2) == 0
        [0, 1].intArrayToBytes_Bytes().countFromAtoB(intToByte(1), 0, 1) == 0
        [0, 1].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, 2) == 1
        [0, 1].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, 1) == 1
        [0, 1].intArrayToBytes_Bytes().countFromAtoB(intToByte(1), 0, 2) == 1
        [0, 1].intArrayToBytes_Bytes().countFromAtoB(intToByte(1), 1, 2) == 1
        [0, 0].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, 2) == 2
        [0, 0].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, 1) == 1
        [0, 0].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 1, 2) == 1
        [0, 1].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, 3) : eid_outOfRange
        [0, 0].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, 3) : eid_outOfRange
        [0, 1].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 3, 0) : eid_outOfRange
        [0, 1].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), -1, 0) : eid_outOfRange
        [0, 1].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, -1) : eid_outOfRange
        [0, 1].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, 9223372036854775807) : eid_outOfRange
        [0, 1].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), 0, -9223372036854775808) : eid_outOfRange
        [0, 1].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), -9223372036854775808, 0) : eid_outOfRange
        [0, 1].intArrayToBytes_Bytes().countFromAtoB(intToByte(0), -9223372036854775808, 9223372036854775807) : eid_outOfRange
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().countFromAtoB(intToByte(1), 0, 31) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().countFromAtoB(intToByte(1), 0, 1) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().countFromAtoB(intToByte(1), 1, 31) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().countFromAtoB(intToByte(1), 1, 2) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().countFromAtoB(intToByte(31), 0, 31) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().countFromAtoB(intToByte(31), 30, 31) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().countFromAtoB(intToByte(31), 0, 30) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().countFromAtoB(intToByte(31), 31, 31) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 0, 31) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 0, 15) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 14, 31) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 14, 15) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 0, 14) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 15, 31) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 15, 15) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().countFromAtoB(intToByte(32), 0, 31) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().countFromAtoB(intToByte(128), 0, 31) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().countFromAtoB(intToByte(255), 0, 31) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31].intArrayToBytes_Bytes().countFromAtoB(intToByte(177), 0, 31) == 0
        [15, 2, 3, 4, 5, 6, 7, 15, 15, 10, 11, 15, 13, 15, 15, 16, 17, 18, 19, 15, 21, 22, 23, 24, 25, 26, 27, 28, 15, 30, 15].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 0, 31) == 9
        [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 0, 31) == 31
        [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 2, 30) == 28
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().countFromAtoB(intToByte(1), 0, 32) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().countFromAtoB(intToByte(1), 0, 1) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().countFromAtoB(intToByte(1), 1, 32) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().countFromAtoB(intToByte(1), 1, 2) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().countFromAtoB(intToByte(32), 0, 32) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().countFromAtoB(intToByte(32), 31, 32) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().countFromAtoB(intToByte(32), 0, 31) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().countFromAtoB(intToByte(32), 32, 32) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 0, 32) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 0, 15) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 14, 32) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 14, 15) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 0, 14) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 15, 32) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 15, 15) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().countFromAtoB(intToByte(33), 0, 32) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().countFromAtoB(intToByte(128), 0, 32) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().countFromAtoB(intToByte(255), 0, 32) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32].intArrayToBytes_Bytes().countFromAtoB(intToByte(177), 0, 32) == 0
        [15, 2, 3, 4, 5, 6, 7, 15, 15, 10, 11, 15, 13, 15, 15, 16, 17, 18, 19, 15, 21, 22, 23, 24, 25, 26, 27, 28, 15, 30, 15, 15].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 0, 32) == 10
        [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 0, 32) == 32
        [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 2, 31) == 29
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().countFromAtoB(intToByte(1), 0, 33) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().countFromAtoB(intToByte(1), 0, 1) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().countFromAtoB(intToByte(1), 1, 33) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().countFromAtoB(intToByte(1), 1, 2) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().countFromAtoB(intToByte(33), 0, 33) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().countFromAtoB(intToByte(33), 32, 33) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().countFromAtoB(intToByte(33), 0, 32) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().countFromAtoB(intToByte(33), 33, 33) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 0, 33) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 0, 15) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 14, 33) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 14, 15) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 0, 14) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 15, 33) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 15, 15) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().countFromAtoB(intToByte(34), 0, 33) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().countFromAtoB(intToByte(128), 0, 33) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().countFromAtoB(intToByte(255), 0, 33) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33].intArrayToBytes_Bytes().countFromAtoB(intToByte(177), 0, 33) == 0
        [15, 2, 3, 4, 5, 6, 7, 15, 15, 10, 11, 15, 13, 15, 15, 16, 17, 18, 19, 15, 21, 22, 23, 24, 25, 26, 27, 28, 15, 30, 15, 15, 15].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 0, 33) == 11
        [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 0, 33) == 33
        [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15].intArrayToBytes_Bytes().countFromAtoB(intToByte(15), 2, 32) == 30

#noinline
def testBytes_CountPartFromAtoB(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        [].intArrayToBytes_Bytes().countPartFromAtoB([0].intArrayToBytes_Bytes(), 0, 0) == 0
        [1].intArrayToBytes_Bytes().countPartFromAtoB([1].intArrayToBytes_Bytes(), 0, 1) == 1
        [1].intArrayToBytes_Bytes().countPartFromAtoB([1].intArrayToBytes_Bytes(), 0, 0) == 0
        [1].intArrayToBytes_Bytes().countPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 1) == 0
        [2].intArrayToBytes_Bytes().countPartFromAtoB([1].intArrayToBytes_Bytes(), 0, 1) == 0
        [2].intArrayToBytes_Bytes().countPartFromAtoB([1].intArrayToBytes_Bytes(), 0, 0) == 0
        [2].intArrayToBytes_Bytes().countPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 1) == 0
        [2].intArrayToBytes_Bytes().countPartFromAtoB([2, 1].intArrayToBytes_Bytes(), 0, 1) == 0
        [2].intArrayToBytes_Bytes().countPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 0, 1) == 0
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([1].intArrayToBytes_Bytes(), 0, 1) == 1
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([1].intArrayToBytes_Bytes(), 0, 2) == 1
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([1].intArrayToBytes_Bytes(), 0, 6) == 1
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([4].intArrayToBytes_Bytes(), 0, 6) == 1
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([4].intArrayToBytes_Bytes(), 1, 6) == 1
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([4].intArrayToBytes_Bytes(), 2, 6) == 1
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([4].intArrayToBytes_Bytes(), 2, 5) == 0
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([4].intArrayToBytes_Bytes(), 0, 5) == 0
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([2].intArrayToBytes_Bytes(), 0, 5) == 2
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 0, 6) == 1
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 6) == 0
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 0, 6) == 1
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 0, 5) == 1
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 1, 5) == 1
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 3, 5) == 1
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 3, 4) == 0
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 4, 6) == 0
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 0, 6) == 1
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 3, 6) == 1
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 0, 5) == 0
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 4, 6) == 0
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([2, 2].intArrayToBytes_Bytes(), 0, 6) == 0
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([2].intArrayToBytes_Bytes(), -1, 2) : eid_outOfRange
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([2].intArrayToBytes_Bytes(), 2, 1) : eid_outOfRange
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().countPartFromAtoB([2].intArrayToBytes_Bytes(), -10, -1) : eid_outOfRange
        [].intArrayToBytes_Bytes().countPartFromAtoB([].intArrayToBytes_Bytes(), 0, 0) : eid_nothingToLook
        [1, 2].intArrayToBytes_Bytes().countPartFromAtoB([].intArrayToBytes_Bytes(), 0, 0) : eid_nothingToLook
        [1, 2, 3, 4, 1, 2, 128].intArrayToBytes_Bytes().countPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 0, 3) == 1
        [1, 2, 3, 4, 1, 2, 128].intArrayToBytes_Bytes().countPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 0, 6) == 2
        [2, 2, 2, 2, 2, 2, 128].intArrayToBytes_Bytes().countPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 0, 7) == 2
        [2, 2, 2, 2, 2, 2, 128].intArrayToBytes_Bytes().countPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 0, 6) == 2
        [2, 2, 2, 2, 2, 2, 128].intArrayToBytes_Bytes().countPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 0, 5) == 1
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().countPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 0, 8) == 2
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().countPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 0, 7) == 2
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().countPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 0, 6) == 2
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().countPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 0, 5) == 1
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().countPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 1, 7) == 2
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().countPartFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 0, 31) == 3
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().countPartFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 1, 31) == 2
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().countPartFromAtoB([1].intArrayToBytes_Bytes(), 0, 31) == 4
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().countPartFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 1, 30) == 2
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().countPartFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 0, 32) == 3
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().countPartFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 1, 32) == 2
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().countPartFromAtoB([1].intArrayToBytes_Bytes(), 0, 32) == 4
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().countPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 31) == 3
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().countPartFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 0, 33) == 4
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().countPartFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 1, 33) == 3
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().countPartFromAtoB([1].intArrayToBytes_Bytes(), 0, 33) == 4
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().countPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 32) == 3
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().countPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 0, 31) == 15
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().countPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 31) == 15
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().countPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 0, 30) == 15
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().countPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 30) == 14
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().countPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 0, 32) == 16
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().countPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 32) == 15
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().countPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 0, 31) == 15
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().countPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 31) == 15
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().countPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 0, 33) == 16
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().countPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 33) == 16
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().countPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 0, 32) == 16
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().countPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 32) == 15

#noinline
def testBytes_PartsEqual?(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        [].intArrayToBytes_Bytes().partsEqual?(0, [].intArrayToBytes_Bytes(), 0, 0)
        ![].intArrayToBytes_Bytes().partsEqual?(1, [].intArrayToBytes_Bytes(), 0, 0)
        ![].intArrayToBytes_Bytes().partsEqual?(-1, [].intArrayToBytes_Bytes(), 0, 0)
        ![].intArrayToBytes_Bytes().partsEqual?(9223372036854775807, [].intArrayToBytes_Bytes(), 0, 0)
        ![].intArrayToBytes_Bytes().partsEqual?(-9223372036854775808, [].intArrayToBytes_Bytes(), 0, 0)
        ![].intArrayToBytes_Bytes().partsEqual?(0, [].intArrayToBytes_Bytes(), 1, 0)
        ![].intArrayToBytes_Bytes().partsEqual?(0, [].intArrayToBytes_Bytes(), -1, 0)
        ![].intArrayToBytes_Bytes().partsEqual?(0, [].intArrayToBytes_Bytes(), 9223372036854775807, 0)
        ![].intArrayToBytes_Bytes().partsEqual?(0, [].intArrayToBytes_Bytes(), -9223372036854775808, 0)
        ![].intArrayToBytes_Bytes().partsEqual?(0, [].intArrayToBytes_Bytes(), 0, 1)
        ![].intArrayToBytes_Bytes().partsEqual?(0, [].intArrayToBytes_Bytes(), 0, -1)
        ![].intArrayToBytes_Bytes().partsEqual?(0, [].intArrayToBytes_Bytes(), 0, -9223372036854775808)
        ![].intArrayToBytes_Bytes().partsEqual?(0, [].intArrayToBytes_Bytes(), 0, 9223372036854775807)
        ![].intArrayToBytes_Bytes().partsEqual?(-1, [].intArrayToBytes_Bytes(), -1, -1)
        [1].intArrayToBytes_Bytes().partsEqual?(0, [1].intArrayToBytes_Bytes(), 0, 1)
        [1].intArrayToBytes_Bytes().partsEqual?(1, [1].intArrayToBytes_Bytes(), 1, 0)
        [1].intArrayToBytes_Bytes().partsEqual?(0, [0, 1].intArrayToBytes_Bytes(), 1, 1)
        [1].intArrayToBytes_Bytes().partsEqual?(1, [1].intArrayToBytes_Bytes(), 0, 0)
        [1].intArrayToBytes_Bytes().partsEqual?(1, [2].intArrayToBytes_Bytes(), 0, 0)
        ![1].intArrayToBytes_Bytes().partsEqual?(0, [0, 1].intArrayToBytes_Bytes(), 0, 1)
        ![1].intArrayToBytes_Bytes().partsEqual?(0, [2].intArrayToBytes_Bytes(), 0, 1)
        ![1].intArrayToBytes_Bytes().partsEqual?(0, [1].intArrayToBytes_Bytes(), 0, 2)
        ![1].intArrayToBytes_Bytes().partsEqual?(-1, [1].intArrayToBytes_Bytes(), 0, 0)
        ![1].intArrayToBytes_Bytes().partsEqual?(-9223372036854775808, [1].intArrayToBytes_Bytes(), 0, 0)
        ![1].intArrayToBytes_Bytes().partsEqual?(9223372036854775807, [1].intArrayToBytes_Bytes(), 0, 0)
        [1, 2, 3, 4, 5, 6].intArrayToBytes_Bytes().partsEqual?(0, [1, 2, 3, 4, 5, 6].intArrayToBytes_Bytes(), 0, 6)
        [1, 2, 3, 4, 5, 6].intArrayToBytes_Bytes().partsEqual?(1, [1, 2, 3, 4, 5, 6].intArrayToBytes_Bytes(), 1, 5)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().partsEqual?(0, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes(), 0, 31)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().partsEqual?(1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes(), 1, 30)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().partsEqual?(1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes(), 1, 13)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().partsEqual?(1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes(), 1, 0)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().partsEqual?(1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes(), 0, 13)
        ![0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().partsEqual?(0, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes(), 0, 31)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0].intArrayToBytes_Bytes().partsEqual?(0, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes(), 0, 31)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0].intArrayToBytes_Bytes().partsEqual?(1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes(), 1, 30)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().partsEqual?(0, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes(), 0, 32)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().partsEqual?(1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes(), 1, 31)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().partsEqual?(1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes(), 1, 13)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().partsEqual?(1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes(), 1, 0)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().partsEqual?(1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes(), 0, 13)
        ![0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().partsEqual?(0, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes(), 0, 32)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 0].intArrayToBytes_Bytes().partsEqual?(0, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes(), 0, 32)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 0].intArrayToBytes_Bytes().partsEqual?(1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes(), 1, 31)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().partsEqual?(0, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes(), 0, 33)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().partsEqual?(1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes(), 1, 32)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().partsEqual?(1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes(), 1, 13)
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().partsEqual?(1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes(), 1, 0)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().partsEqual?(1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes(), 0, 13)
        ![0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 3, 3].intArrayToBytes_Bytes().partsEqual?(0, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes(), 0, 33)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 0].intArrayToBytes_Bytes().partsEqual?(0, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes(), 0, 33)
        ![1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 0].intArrayToBytes_Bytes().partsEqual?(1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes(), 1, 32)

#noinline
def testBytes_LookNFromAtoB(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        [].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 0, 0).nothing?()
        [].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 2, 0, 0).nothing?()
        [].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 9223372036854775807, 0, 0).nothing?()
        [].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), -1, 1, 0) : eid_outOfRange
        [].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), -9223372036854775808, 1, 0) : eid_outOfRange
        [].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 1, 0) : eid_outOfRange
        [].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 0, 1) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 0, 1) == 0
        [10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 2, 0, 1).nothing?()
        [10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 0, 0).nothing?()
        [10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 1, 1).nothing?()
        [10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(97), 1, 0, 1).nothing?()
        [10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 1, 0) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 0, 0, 0) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), -1, 0, 0) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), -9223372036854775808, 0, 0) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(97), 1, -1, 0) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(97), 1, 0, -1) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 0, 2) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 2, 0) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 0, 1) == 0
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 2, 0, 1).nothing?()
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 0, 2) == 0
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 2, 0, 2).nothing?()
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 1, 0, 2) == 1
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 2, 0, 2).nothing?()
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 1, 1, 2) == 1
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 2, 1, 2).nothing?()
        [2, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 1, 0, 2) == 0
        [2, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 2, 0, 2) == 1
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 0, 0).nothing?()
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 2, 0, 0).nothing?()
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 0, 0, 0) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), -1, 0, 0) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 1, 0, 0).nothing?()
        [10, 10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 0, 1) == 0
        [10, 10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 2, 0, 1).nothing?()
        [10, 10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 1, 2) == 1
        [10, 10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 2, 1, 2).nothing?()
        [10, 10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 0, 2) == 0
        [10, 10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 2, 0, 2) == 1
        [10, 10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 0, 0).nothing?()
        [10, 10].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 2, 2).nothing?()
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 1, 2).nothing?()
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 1, 1, 2) == 1
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 1, 1, 1).nothing?()
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(97), 1, 0, 2).nothing?()
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 1, 0) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 3, 0) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 2, 3, 0) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(97), 1, -1, 0) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(97), 1, 0, -1) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 0, 3) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(10), 1, 3, 0) : eid_outOfRange
        [1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 1, 0, 8) == 0
        [1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 2, 0, 8) == 1
        [1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 7, 0, 8) == 6
        [1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 8, 0, 8) == 7
        [1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 2, 1, 8) == 2
        [1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 3, 1, 7) == 3
        [1, 1, 1, 1, 0, 1, 1, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 4, 1, 7) == 5
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 1, 0, 31) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 2, 0, 31) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 3, 0, 31) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 4, 0, 31) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 5, 0, 31).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 1, 0, 11) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 2, 0, 11) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 3, 0, 11).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 1, 0, 31) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 2, 0, 31) == 11
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 3, 0, 31) == 21
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 4, 0, 31).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 5, 0, 31).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(97), 1, 0, 31).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(97), 2, 0, 31).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 1, 0, 32) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 2, 0, 32) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 3, 0, 32) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 4, 0, 32) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 5, 0, 32).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 1, 0, 11) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 2, 0, 11) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 3, 0, 11).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 1, 0, 32) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 2, 0, 32) == 11
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 3, 0, 32) == 21
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 4, 0, 32) == 31
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 5, 0, 32).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(97), 1, 0, 32).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(97), 2, 0, 32).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 1, 0, 33) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 2, 0, 33) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 3, 0, 33) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 4, 0, 33) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 5, 0, 33).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 1, 0, 11) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 2, 0, 11) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(1), 3, 0, 11).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 1, 0, 33) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 2, 0, 33) == 11
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 3, 0, 33) == 21
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 4, 0, 33) == 31
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(2), 5, 0, 33).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(3), 1, 0, 33) == 2
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(3), 2, 0, 33) == 12
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(3), 3, 0, 33) == 22
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(3), 4, 0, 33) == 32
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(3), 5, 0, 33).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(97), 1, 0, 33).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNFromAtoB(intToByte(97), 2, 0, 33).nothing?()

#noinline
def testBytes_LookNPartFromAtoB(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        [].intArrayToBytes_Bytes().lookNPartFromAtoB([0].intArrayToBytes_Bytes(), 1, 0, 0).nothing?()
        [].intArrayToBytes_Bytes().lookNPartFromAtoB([0].intArrayToBytes_Bytes(), 2, 0, 0).nothing?()
        [].intArrayToBytes_Bytes().lookNPartFromAtoB([0].intArrayToBytes_Bytes(), 9223372036854775807, 0, 0).nothing?()
        [].intArrayToBytes_Bytes().lookNPartFromAtoB([0].intArrayToBytes_Bytes(), 0, 0, 0) : eid_outOfRange
        [].intArrayToBytes_Bytes().lookNPartFromAtoB([0].intArrayToBytes_Bytes(), -1, 0, 0) : eid_outOfRange
        [].intArrayToBytes_Bytes().lookNPartFromAtoB([0].intArrayToBytes_Bytes(), -9223372036854775808, 0, 0) : eid_outOfRange
        [1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 1) == 0
        [1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 9223372036854775807, 0, 1).nothing?()
        [1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 0, 0, 1) : eid_outOfRange
        [1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), -1, 0, 1) : eid_outOfRange
        [1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), -9223372036854775808, 0, 1) : eid_outOfRange
        [1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 1, 0) : eid_outOfRange
        [1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 0).nothing?()
        [1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 0).nothing?()
        [1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 1, 1).nothing?()
        [1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 1, 1).nothing?()
        [2].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 1).nothing?()
        [2].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 1).nothing?()
        [2].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 0).nothing?()
        [2].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 0).nothing?()
        [2].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 1, 1).nothing?()
        [2].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 1, 1).nothing?()
        [2].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 1].intArrayToBytes_Bytes(), 1, 0, 1).nothing?()
        [2].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 1].intArrayToBytes_Bytes(), 2, 0, 1).nothing?()
        [2].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 0, 1).nothing?()
        [2].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 2, 0, 1).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 1) == 0
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 0, 0, 1) : eid_outOfRange
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), -1, 0, 1) : eid_outOfRange
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), -9223372036854775808, 0, 1) : eid_outOfRange
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 1).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 2) == 0
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 2).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 6) == 0
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([4].intArrayToBytes_Bytes(), 1, 0, 6) == 5
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([4].intArrayToBytes_Bytes(), 2, 0, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([4].intArrayToBytes_Bytes(), 1, 1, 6) == 5
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([4].intArrayToBytes_Bytes(), 2, 1, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([4].intArrayToBytes_Bytes(), 1, 2, 6) == 5
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([4].intArrayToBytes_Bytes(), 2, 2, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([4].intArrayToBytes_Bytes(), 1, 2, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([4].intArrayToBytes_Bytes(), 2, 2, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([4].intArrayToBytes_Bytes(), 1, 0, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([4].intArrayToBytes_Bytes(), 2, 0, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2].intArrayToBytes_Bytes(), 1, 0, 5) == 1
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2].intArrayToBytes_Bytes(), 2, 0, 5) == 3
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2].intArrayToBytes_Bytes(), 1, 2, 5) == 3
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2].intArrayToBytes_Bytes(), 2, 2, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2].intArrayToBytes_Bytes(), 3, 0, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 0, 6) == 0
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 2, 0, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 1, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 2, 1, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 1, 0, 6) == 3
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 2, 0, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 1, 0, 5) == 3
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 2, 0, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 1, 1, 5) == 3
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 2, 1, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 1, 3, 5) == 3
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 2, 3, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 1, 3, 4).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 2, 3, 4).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 1, 4, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 2, 4, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 1, 0, 6) == 3
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 2, 0, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 1, 3, 6) == 3
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 2, 3, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 1, 0, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 2, 0, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 1, 4, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 2, 4, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 2].intArrayToBytes_Bytes(), 1, 0, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 2].intArrayToBytes_Bytes(), 2, 0, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2].intArrayToBytes_Bytes(), 1, -1, 2) : eid_outOfRange
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2].intArrayToBytes_Bytes(), 1, 2, 1) : eid_outOfRange
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookNPartFromAtoB([2].intArrayToBytes_Bytes(), 1, -10, -1) : eid_outOfRange
        [].intArrayToBytes_Bytes().lookNPartFromAtoB([].intArrayToBytes_Bytes(), 1, 0, 0) : eid_nothingToLook
        [1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([].intArrayToBytes_Bytes(), 1, 0, 0) : eid_nothingToLook
        [1, 2, 3, 4, 1, 2, 255].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 0, 3) == 0
        [1, 2, 3, 4, 1, 2, 255].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 2, 0, 3).nothing?()
        [1, 2, 3, 4, 1, 2, 255].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 0, 6) == 0
        [1, 2, 3, 4, 1, 2, 255].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 2, 0, 6) == 4
        [1, 2, 3, 4, 1, 2, 255].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 3, 0, 6).nothing?()
        [2, 2, 2, 2, 2, 2, 255].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 1, 0, 7) == 0
        [2, 2, 2, 2, 2, 2, 255].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 2, 0, 7) == 3
        [2, 2, 2, 2, 2, 2, 255].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 3, 0, 7).nothing?()
        [2, 2, 2, 2, 2, 2, 255].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 1, 1, 6) == 1
        [2, 2, 2, 2, 2, 2, 255].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 2, 1, 6).nothing?()
        [2, 2, 2, 2, 2, 2, 255].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 1, 2, 5) == 2
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 1, 0, 8) == 0
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 2, 0, 8) == 3
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 3, 0, 8).nothing?()
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 1, 1, 7) == 1
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 2, 1, 7) == 4
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 3, 1, 7).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 31) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 31) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 3, 0, 31) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 4, 0, 31) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 5, 0, 31).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 1, 30) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 1, 30) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 3, 1, 30).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 0, 31) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 2, 0, 31) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 3, 0, 31) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 4, 0, 31).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 15) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 15) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 3, 0, 15).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 32) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 32) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 3, 0, 32) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 4, 0, 32) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 5, 0, 32).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([2].intArrayToBytes_Bytes(), 1, 0, 32) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([2].intArrayToBytes_Bytes(), 2, 0, 32) == 11
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([2].intArrayToBytes_Bytes(), 3, 0, 32) == 21
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([2].intArrayToBytes_Bytes(), 4, 0, 32) == 31
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([2].intArrayToBytes_Bytes(), 5, 0, 32).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 1, 30) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 1, 30) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 3, 1, 30).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 0, 32) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 2, 0, 32) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 3, 0, 32) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 4, 0, 32) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 5, 0, 32).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 15) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 15) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 3, 0, 15).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 33) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 33) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 3, 0, 33) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 4, 0, 33) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 5, 0, 33).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([3].intArrayToBytes_Bytes(), 1, 0, 33) == 2
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([3].intArrayToBytes_Bytes(), 2, 0, 33) == 12
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([3].intArrayToBytes_Bytes(), 3, 0, 33) == 22
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([3].intArrayToBytes_Bytes(), 4, 0, 33) == 32
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([3].intArrayToBytes_Bytes(), 5, 0, 33).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 1, 30) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 1, 30) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 3, 1, 30).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 0, 33) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 2, 0, 33) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 3, 0, 33) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 4, 0, 33) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 5, 0, 33).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 1, 0, 33) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 2, 0, 33) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 3, 0, 33) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 4, 0, 33) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 5, 0, 33).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 1, 0, 33) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 2, 0, 33) == 11
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 3, 0, 33) == 21
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 4, 0, 33) == 31
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 5, 0, 33).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 15) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 15) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookNPartFromAtoB([1].intArrayToBytes_Bytes(), 3, 0, 15).nothing?()
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 0, 31) == 0
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 2, 0, 31) == 2
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 15, 0, 31) == 28
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 16, 0, 31).nothing?()
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 1, 30) == 1
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 2, 1, 30) == 3
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 14, 1, 30) == 27
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 15, 1, 30).nothing?()
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 0, 32) == 0
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 2, 0, 32) == 2
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 16, 0, 32) == 30
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 17, 0, 32).nothing?()
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 1, 31) == 1
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 2, 1, 31) == 3
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 15, 1, 31) == 29
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 16, 1, 31).nothing?()
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 0, 33) == 0
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 2, 0, 33) == 2
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 16, 0, 33) == 30
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 17, 0, 33).nothing?()
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 1, 32) == 1
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 2, 1, 32) == 3
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 15, 1, 32) == 29
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 16, 1, 32).nothing?()

#noinline
def testBytes_LookAllFromAtoB(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        [].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 0, 0) == []
        [].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 1, 0) : eid_outOfRange
        [].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 0, 1) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 0, 1) == [0]
        [10].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 0, 0) == []
        [10].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 1, 1) == []
        [10].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(127), 0, 1) == []
        [10].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(97), 0, 1) == []
        [10].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 1, 0) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(97), -1, 0) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(97), 0, -1) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 0, 2) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 2, 0) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 0, 1) == [0]
        [10, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 0, 2) == [0]
        [10, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(2), 0, 2) == [1]
        [10, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(2), 1, 2) == [1]
        [2, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(2), 0, 2) == [0, 1]
        [10, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 0, 0) == []
        [10, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(2), 0, 0) == []
        [10, 10].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 0, 1) == [0]
        [10, 10].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 1, 2) == [1]
        [10, 10].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 0, 2) == [0, 1]
        [10, 10].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 0, 0) == []
        [10, 10].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 2, 2) == []
        [10, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 1, 2) == []
        [10, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(2), 1, 1) == []
        [10, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(127), 0, 2) == []
        [10, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(97), 0, 2) == []
        [10, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 1, 0) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 3, 0) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(97), -1, 0) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(97), 0, -1) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 0, 3) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(10), 3, 0) : eid_outOfRange
        [10, 3, 22, 2, 3, 2, 10].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(2), 0, 6) == [3, 5]
        [1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(1), 0, 8) == [0, 1, 2, 3, 4, 5, 6, 7]
        [1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(1), 1, 8) == [1, 2, 3, 4, 5, 6, 7]
        [1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(1), 1, 7) == [1, 2, 3, 4, 5, 6]
        [1, 1, 1, 1, 0, 1, 1, 1].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(1), 1, 7) == [1, 2, 3, 5, 6]
        [10, 2, 22, 100, 1, 3].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(22), 2, 6) == [2]
        [10, 2, 22, 100, 1, 3].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(100), 0, 6) == [3]
        [10, 2, 22, 100, 1, 3].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(1), 0, 6) == [4]
        [10, 2, 22, 100, 1, 3].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(3), 0, 6) == [5]
        [10, 2, 22, 100, 1, 3].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(22), 3, 6) == []
        [10, 2, 22, 100, 1, 3].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(3), 0, 5) == []
        [10, 2, 22, 100, 1, 3].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(127), 0, 6) == []
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(1), 0, 31) == [0, 10, 20, 30]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(1), 0, 15) == [0, 10]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(1), 2, 21) == [10, 20]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(1), 2, 10) == []
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(2), 0, 31) == [1, 11, 21]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(2), 0, 15) == [1, 11]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(2), 2, 21) == [11]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(2), 2, 10) == []
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(3), 0, 31) == [2, 12, 22]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(3), 0, 15) == [2, 12]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(3), 2, 21) == [2, 12]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(3), 2, 10) == [2]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(1), 0, 32) == [0, 10, 20, 30]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(1), 0, 15) == [0, 10]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(1), 2, 21) == [10, 20]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(1), 2, 10) == []
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(2), 0, 32) == [1, 11, 21, 31]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(2), 0, 15) == [1, 11]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(2), 2, 21) == [11]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(2), 2, 10) == []
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(3), 0, 32) == [2, 12, 22]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(3), 0, 15) == [2, 12]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(3), 2, 21) == [2, 12]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(3), 2, 10) == [2]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(1), 0, 33) == [0, 10, 20, 30]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(1), 0, 15) == [0, 10]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(1), 2, 21) == [10, 20]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(1), 2, 10) == []
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(2), 0, 33) == [1, 11, 21, 31]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(2), 0, 15) == [1, 11]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(2), 2, 21) == [11]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(2), 2, 10) == []
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(3), 0, 33) == [2, 12, 22, 32]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(3), 0, 15) == [2, 12]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(3), 2, 21) == [2, 12]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(3), 2, 10) == [2]
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(0), 0, 31) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(0), 1, 30) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(0), 0, 32) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(0), 1, 31) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(0), 0, 33) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].intArrayToBytes_Bytes().lookAllFromAtoB(intToByte(0), 1, 32) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]

#noinline
def testBytes_LookAllPartsFromAtoB(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        [].intArrayToBytes_Bytes().lookAllPartsFromAtoB([0].intArrayToBytes_Bytes(), 0, 0) == []
        [].intArrayToBytes_Bytes().lookAllPartsFromAtoB([10].intArrayToBytes_Bytes(), 0, 0) == []
        [1].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1].intArrayToBytes_Bytes(), 0, 1) == [0]
        [1].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1].intArrayToBytes_Bytes(), 0, 0) == []
        [1].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1].intArrayToBytes_Bytes(), 1, 1) == []
        [2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1].intArrayToBytes_Bytes(), 0, 1) == []
        [2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1].intArrayToBytes_Bytes(), 0, 0) == []
        [2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1].intArrayToBytes_Bytes(), 1, 1) == []
        [2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 1].intArrayToBytes_Bytes(), 0, 1) == []
        [2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 2].intArrayToBytes_Bytes(), 0, 1) == []
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1].intArrayToBytes_Bytes(), 0, 1) == [0]
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1].intArrayToBytes_Bytes(), 0, 2) == [0]
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1].intArrayToBytes_Bytes(), 0, 6) == [0]
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([4].intArrayToBytes_Bytes(), 0, 6) == [5]
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([4].intArrayToBytes_Bytes(), 1, 6) == [5]
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([4].intArrayToBytes_Bytes(), 2, 6) == [5]
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([4].intArrayToBytes_Bytes(), 2, 5) == []
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([4].intArrayToBytes_Bytes(), 0, 5) == []
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2].intArrayToBytes_Bytes(), 0, 5) == [1, 3]
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 2].intArrayToBytes_Bytes(), 0, 6) == [0]
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 6) == []
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 3].intArrayToBytes_Bytes(), 0, 6) == [3]
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 3].intArrayToBytes_Bytes(), 0, 5) == [3]
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 3].intArrayToBytes_Bytes(), 1, 5) == [3]
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 3].intArrayToBytes_Bytes(), 3, 5) == [3]
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 3].intArrayToBytes_Bytes(), 3, 4) == []
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 3].intArrayToBytes_Bytes(), 4, 6) == []
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 0, 6) == [3]
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 3, 6) == [3]
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 0, 5) == []
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 4, 6) == []
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 2].intArrayToBytes_Bytes(), 0, 6) == []
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 255].intArrayToBytes_Bytes(), 0, 6) == [1]
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2].intArrayToBytes_Bytes(), -1, 2) : eid_outOfRange
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2].intArrayToBytes_Bytes(), 2, 1) : eid_outOfRange
        [1, 2, 255, 2, 3, 4].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2].intArrayToBytes_Bytes(), -10, -1) : eid_outOfRange
        [].intArrayToBytes_Bytes().lookAllPartsFromAtoB([].intArrayToBytes_Bytes(), 0, 0) : eid_nothingToLook
        [1, 2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([].intArrayToBytes_Bytes(), 0, 0) : eid_nothingToLook
        [1, 2, 3, 4, 1, 2, 128].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 2].intArrayToBytes_Bytes(), 0, 3) == [0]
        [1, 2, 3, 4, 1, 2, 128].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 2].intArrayToBytes_Bytes(), 0, 6) == [0, 4]
        [2, 2, 2, 2, 2, 2, 128].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 0, 7) == [0, 3]
        [2, 2, 2, 2, 2, 2, 128].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 0, 6) == [0, 3]
        [2, 2, 2, 2, 2, 2, 128].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 0, 5) == [0]
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 0, 8) == [0, 3]
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 0, 7) == [0, 3]
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 0, 6) == [0, 3]
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 0, 5) == [0]
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 1, 7) == [1, 4]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 2].intArrayToBytes_Bytes(), 0, 31) == [0, 10, 20]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllPartsFromAtoB([0, 1].intArrayToBytes_Bytes(), 0, 31) == [9, 19, 29]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllPartsFromAtoB([0, 1].intArrayToBytes_Bytes(), 0, 30) == [9, 19]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 30) == [10, 20]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllPartsFromAtoB([0, 1].intArrayToBytes_Bytes(), 1, 30) == [9, 19]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 0, 31) == [0, 10, 20]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllPartsFromAtoB([0, 1, 2].intArrayToBytes_Bytes(), 0, 31) == [9, 19]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllPartsFromAtoB([0, 1, 2].intArrayToBytes_Bytes(), 0, 30) == [9, 19]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 1, 30) == [10, 20]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookAllPartsFromAtoB([0, 1, 2].intArrayToBytes_Bytes(), 1, 30) == [9, 19]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 2].intArrayToBytes_Bytes(), 0, 32) == [0, 10, 20, 30]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([0, 1].intArrayToBytes_Bytes(), 0, 32) == [9, 19, 29]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([0, 1].intArrayToBytes_Bytes(), 0, 30) == [9, 19]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 31) == [10, 20]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([0, 1].intArrayToBytes_Bytes(), 1, 31) == [9, 19, 29]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 0, 32) == [0, 10, 20]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([0, 1, 2].intArrayToBytes_Bytes(), 0, 32) == [9, 19, 29]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([0, 1, 2].intArrayToBytes_Bytes(), 0, 30) == [9, 19]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 1, 31) == [10, 20]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookAllPartsFromAtoB([0, 1, 2].intArrayToBytes_Bytes(), 1, 31) == [9, 19]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 2].intArrayToBytes_Bytes(), 0, 33) == [0, 10, 20, 30]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllPartsFromAtoB([0, 1].intArrayToBytes_Bytes(), 0, 33) == [9, 19, 29]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllPartsFromAtoB([0, 1].intArrayToBytes_Bytes(), 0, 30) == [9, 19]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 32) == [10, 20, 30]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllPartsFromAtoB([0, 1].intArrayToBytes_Bytes(), 1, 32) == [9, 19, 29]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 0, 33) == [0, 10, 20, 30]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllPartsFromAtoB([0, 1, 2].intArrayToBytes_Bytes(), 0, 33) == [9, 19, 29]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllPartsFromAtoB([0, 1, 2].intArrayToBytes_Bytes(), 0, 30) == [9, 19]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 1, 32) == [10, 20]
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookAllPartsFromAtoB([0, 1, 2].intArrayToBytes_Bytes(), 1, 32) == [9, 19, 29]
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 1].intArrayToBytes_Bytes(), 0, 31) == [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28]
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 30) == [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27]
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 1].intArrayToBytes_Bytes(), 0, 32) == [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30]
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 31) == [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29]
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 1].intArrayToBytes_Bytes(), 0, 33) == [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30]
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookAllPartsFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 32) == [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29]

#noinline
def testBytes_LookBackNFromAtoB(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        [].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 0, 0).nothing?()
        [].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 2, 0, 0).nothing?()
        [].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 9223372036854775807, 0, 0).nothing?()
        [].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), -1, 1, 0) : eid_outOfRange
        [].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), -9223372036854775808, 1, 0) : eid_outOfRange
        [].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 1, 0) : eid_outOfRange
        [].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 0, 1) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 0, 1) == 0
        [10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 2, 0, 1).nothing?()
        [10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 0, 0).nothing?()
        [10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 1, 1).nothing?()
        [10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(11), 1, 0, 1).nothing?()
        [10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(97), 1, 0, 1).nothing?()
        [10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 1, 0) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 0, 0, 0) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), -1, 0, 0) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), -9223372036854775808, 0, 0) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(97), 1, -1, 0) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(97), 1, 0, -1) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 0, 2) : eid_outOfRange
        [10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 2, 0) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 0, 1) == 0
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 2, 0, 1).nothing?()
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 0, 2) == 0
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 2, 0, 2).nothing?()
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 1, 0, 2) == 1
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 2, 0, 2).nothing?()
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 1, 1, 2) == 1
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 2, 1, 2).nothing?()
        [2, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 1, 0, 2) == 1
        [2, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 2, 0, 2) == 0
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 0, 0).nothing?()
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 2, 0, 0).nothing?()
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 0, 0, 0) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), -1, 0, 0) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 1, 0, 0).nothing?()
        [10, 10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 0, 1) == 0
        [10, 10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 2, 0, 1).nothing?()
        [10, 10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 1, 2) == 1
        [10, 10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 2, 1, 2).nothing?()
        [10, 10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 0, 2) == 1
        [10, 10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 2, 0, 2) == 0
        [10, 10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 0, 0).nothing?()
        [10, 10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 2, 2).nothing?()
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 1, 2).nothing?()
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 1, 1, 2) == 1
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 1, 1, 1).nothing?()
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(11), 1, 0, 2).nothing?()
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(97), 1, 0, 2).nothing?()
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 1, 0) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 3, 0) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 2, 3, 0) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(97), 1, -1, 0) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(97), 1, 0, -1) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 0, 3) : eid_outOfRange
        [10, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 3, 0) : eid_outOfRange
        [10, 23, 22, 255, 1, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 0, 6) == 0
        [10, 23, 22, 255, 1, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 2, 0, 6).nothing?()
        [10, 23, 22, 255, 1, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 1, 0, 6) == 5
        [10, 23, 22, 255, 1, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 2, 0, 6).nothing?()
        [10, 23, 22, 2, 25, 2, 10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 1, 0, 6) == 5
        [10, 23, 22, 2, 25, 2, 10].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 2, 0, 6) == 3
        [1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 1, 0, 8) == 7
        [1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 2, 0, 8) == 6
        [1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 7, 0, 8) == 1
        [1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 8, 0, 8) == 0
        [1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 2, 1, 8) == 6
        [1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 3, 1, 7) == 4
        [1, 1, 1, 1, 0, 1, 1, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 4, 1, 7) == 2
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 1, 0, 31) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 2, 0, 31) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 3, 0, 31) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 4, 0, 31) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 5, 0, 31).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 0, 31).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 1, 1, 30) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 2, 1, 30) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 3, 1, 30).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 1, 0, 31) == 21
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 2, 0, 31) == 11
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 3, 0, 31) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 4, 0, 31).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 5, 0, 31).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 1, 1, 30) == 21
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 2, 1, 30) == 11
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 3, 1, 30) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 1, 0, 31) == 22
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 2, 0, 31) == 12
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 3, 0, 31) == 2
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 4, 0, 31).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 5, 0, 31).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 1, 1, 30) == 22
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 2, 1, 30) == 12
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 3, 1, 30) == 2
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 1, 0, 32) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 2, 0, 32) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 3, 0, 32) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 4, 0, 32) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 5, 0, 32).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 0, 32).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 1, 1, 31) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 2, 1, 31) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 3, 1, 31) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 4, 1, 31).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 1, 0, 32) == 31
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 2, 0, 32) == 21
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 3, 0, 32) == 11
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 4, 0, 32) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 5, 0, 32).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 1, 1, 31) == 21
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 2, 1, 31) == 11
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 3, 1, 31) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 1, 0, 32) == 22
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 2, 0, 32) == 12
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 3, 0, 32) == 2
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 4, 0, 32).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 5, 0, 32).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 1, 1, 31) == 22
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 2, 1, 31) == 12
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 3, 1, 31) == 2
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 1, 0, 33) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 2, 0, 33) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 3, 0, 33) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 4, 0, 33) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 5, 0, 33).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(10), 1, 0, 33).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 1, 1, 32) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 2, 1, 32) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 3, 1, 32) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(1), 4, 1, 32).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 1, 0, 33) == 31
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 2, 0, 33) == 21
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 3, 0, 33) == 11
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 4, 0, 33) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 5, 0, 33).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 1, 1, 32) == 31
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 2, 1, 32) == 21
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 3, 1, 32) == 11
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 4, 1, 32) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(2), 5, 1, 32).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 1, 0, 33) == 32
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 2, 0, 33) == 22
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 3, 0, 33) == 12
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 4, 0, 33) == 2
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 5, 0, 33).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 1, 1, 32) == 22
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 2, 1, 32) == 12
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNFromAtoB(intToByte(3), 3, 1, 32) == 2

#noinline
def testBytes_LookBackNPartFromAtoB(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        [].intArrayToBytes_Bytes().lookBackNPartFromAtoB([0].intArrayToBytes_Bytes(), 1, 0, 0).nothing?()
        [].intArrayToBytes_Bytes().lookBackNPartFromAtoB([0].intArrayToBytes_Bytes(), 2, 0, 0).nothing?()
        [].intArrayToBytes_Bytes().lookBackNPartFromAtoB([0].intArrayToBytes_Bytes(), 9223372036854775807, 0, 0).nothing?()
        [].intArrayToBytes_Bytes().lookBackNPartFromAtoB([0].intArrayToBytes_Bytes(), 0, 0, 0) : eid_outOfRange
        [].intArrayToBytes_Bytes().lookBackNPartFromAtoB([0].intArrayToBytes_Bytes(), -1, 0, 0) : eid_outOfRange
        [].intArrayToBytes_Bytes().lookBackNPartFromAtoB([0].intArrayToBytes_Bytes(), -9223372036854775808, 0, 0) : eid_outOfRange
        [1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 1) == 0
        [1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 9223372036854775807, 0, 1).nothing?()
        [1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 0, 0, 1) : eid_outOfRange
        [1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), -1, 0, 1) : eid_outOfRange
        [1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), -9223372036854775808, 0, 1) : eid_outOfRange
        [1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 1, 0) : eid_outOfRange
        [1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 0).nothing?()
        [1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 0).nothing?()
        [1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 1, 1).nothing?()
        [1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 1, 1).nothing?()
        [2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 1).nothing?()
        [2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 1).nothing?()
        [2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 0).nothing?()
        [2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 0).nothing?()
        [2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 1, 1).nothing?()
        [2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 1, 1).nothing?()
        [2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 1].intArrayToBytes_Bytes(), 1, 0, 1).nothing?()
        [2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 1].intArrayToBytes_Bytes(), 2, 0, 1).nothing?()
        [2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 0, 1).nothing?()
        [2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 2, 0, 1).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 1) == 0
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 0, 0, 1) : eid_outOfRange
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), -1, 0, 1) : eid_outOfRange
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), -9223372036854775808, 0, 1) : eid_outOfRange
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 1).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 2) == 0
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 2).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 6) == 0
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([4].intArrayToBytes_Bytes(), 1, 0, 6) == 5
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([4].intArrayToBytes_Bytes(), 2, 0, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([4].intArrayToBytes_Bytes(), 1, 1, 6) == 5
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([4].intArrayToBytes_Bytes(), 2, 1, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([4].intArrayToBytes_Bytes(), 1, 2, 6) == 5
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([4].intArrayToBytes_Bytes(), 2, 2, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([4].intArrayToBytes_Bytes(), 1, 2, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([4].intArrayToBytes_Bytes(), 2, 2, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([4].intArrayToBytes_Bytes(), 1, 0, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([4].intArrayToBytes_Bytes(), 2, 0, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2].intArrayToBytes_Bytes(), 1, 0, 5) == 3
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2].intArrayToBytes_Bytes(), 2, 0, 5) == 1
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2].intArrayToBytes_Bytes(), 1, 2, 5) == 3
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2].intArrayToBytes_Bytes(), 2, 2, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2].intArrayToBytes_Bytes(), 3, 0, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 0, 6) == 0
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 2, 0, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 1, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 2, 1, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 1, 0, 6) == 3
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 2, 0, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 1, 0, 5) == 3
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 2, 0, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 1, 1, 5) == 3
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 2, 1, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 1, 3, 5) == 3
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 2, 3, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 1, 3, 4).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 2, 3, 4).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 1, 4, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 2, 4, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 1, 0, 6) == 3
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 2, 0, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 1, 3, 6) == 3
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 2, 3, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 1, 0, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 2, 0, 5).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 1, 4, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3, 4].intArrayToBytes_Bytes(), 2, 4, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 2].intArrayToBytes_Bytes(), 1, 0, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 2].intArrayToBytes_Bytes(), 2, 0, 6).nothing?()
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2].intArrayToBytes_Bytes(), 1, -1, 2) : eid_outOfRange
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2].intArrayToBytes_Bytes(), 1, 2, 1) : eid_outOfRange
        [1, 2, 128, 2, 3, 4].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2].intArrayToBytes_Bytes(), 1, -10, -1) : eid_outOfRange
        [].intArrayToBytes_Bytes().lookBackNPartFromAtoB([].intArrayToBytes_Bytes(), 1, 0, 0) : eid_nothingToLook
        [1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([].intArrayToBytes_Bytes(), 1, 0, 0) : eid_nothingToLook
        [1, 2, 3, 4, 1, 2, 255].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 0, 3) == 0
        [1, 2, 3, 4, 1, 2, 255].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 2, 0, 3).nothing?()
        [1, 2, 3, 4, 1, 2, 255].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 0, 6) == 4
        [1, 2, 3, 4, 1, 2, 255].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 2, 0, 6) == 0
        [1, 2, 3, 4, 1, 2, 255].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 3, 0, 6).nothing?()
        [2, 2, 2, 2, 2, 2, 255].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 1, 0, 7) == 3
        [2, 2, 2, 2, 2, 2, 255].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 2, 0, 7) == 0
        [2, 2, 2, 2, 2, 2, 255].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 3, 0, 7).nothing?()
        [2, 2, 2, 2, 2, 2, 255].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 1, 1, 6) == 3
        [2, 2, 2, 2, 2, 2, 255].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 2, 1, 6).nothing?()
        [2, 2, 2, 2, 2, 2, 255].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 1, 2, 5) == 2
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 1, 0, 8) == 5
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 2, 0, 8) == 2
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 3, 0, 8).nothing?()
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 1, 1, 7) == 4
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 2, 1, 7) == 1
        [2, 2, 2, 2, 2, 2, 2, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 2, 2].intArrayToBytes_Bytes(), 3, 1, 7).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 31) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 31) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 3, 0, 31) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 4, 0, 31) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 5, 0, 31).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 1, 30) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 1, 30) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 3, 1, 30).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 0, 31) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 2, 0, 31) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 3, 0, 31) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 4, 0, 31).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 15) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 15) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 3, 0, 15).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 32) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 32) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 3, 0, 32) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 4, 0, 32) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 5, 0, 32).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2].intArrayToBytes_Bytes(), 1, 0, 32) == 31
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2].intArrayToBytes_Bytes(), 2, 0, 32) == 21
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2].intArrayToBytes_Bytes(), 3, 0, 32) == 11
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2].intArrayToBytes_Bytes(), 4, 0, 32) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2].intArrayToBytes_Bytes(), 5, 0, 32).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 1, 30) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 1, 30) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 3, 1, 30).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 0, 32) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 2, 0, 32) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 3, 0, 32) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 4, 0, 32) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 5, 0, 32).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 15) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 15) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 3, 0, 15).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 33) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 33) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 3, 0, 33) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 4, 0, 33) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 5, 0, 33).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([3].intArrayToBytes_Bytes(), 1, 0, 33) == 32
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([3].intArrayToBytes_Bytes(), 2, 0, 33) == 22
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([3].intArrayToBytes_Bytes(), 3, 0, 33) == 12
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([3].intArrayToBytes_Bytes(), 4, 0, 33) == 2
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([3].intArrayToBytes_Bytes(), 5, 0, 33).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 1, 30) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 1, 30) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 3, 1, 30).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 1, 0, 33) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 2, 0, 33) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 3, 0, 33) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 4, 0, 33) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2].intArrayToBytes_Bytes(), 5, 0, 33).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 1, 0, 33) == 30
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 2, 0, 33) == 20
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 3, 0, 33) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 4, 0, 33) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 2, 3].intArrayToBytes_Bytes(), 5, 0, 33).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 1, 0, 33) == 31
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 2, 0, 33) == 21
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 3, 0, 33) == 11
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 4, 0, 33) == 1
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([2, 3].intArrayToBytes_Bytes(), 5, 0, 33).nothing?()
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 1, 0, 15) == 10
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 2, 0, 15) == 0
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1].intArrayToBytes_Bytes(), 3, 0, 15).nothing?()
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 0, 31) == 29
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 2, 0, 31) == 27
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 15, 0, 31) == 1
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 16, 0, 31).nothing?()
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 1, 30) == 28
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 2, 1, 30) == 26
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 14, 1, 30) == 2
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 15, 1, 30).nothing?()
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 0, 32) == 30
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 2, 0, 32) == 28
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 16, 0, 32) == 0
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 17, 0, 32).nothing?()
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 1, 31) == 29
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 2, 1, 31) == 27
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 15, 1, 31) == 1
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 16, 1, 31).nothing?()
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 0, 33) == 31
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 2, 0, 33) == 29
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 16, 0, 33) == 1
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 17, 0, 33).nothing?()
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 1, 1, 32) == 30
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 2, 1, 32) == 28
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 15, 1, 32) == 2
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1].intArrayToBytes_Bytes().lookBackNPartFromAtoB([1, 1].intArrayToBytes_Bytes(), 16, 1, 32).nothing?()

#noinline
def testBytes_Delete$(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        [].intArrayToBytes_Bytes().delete$(0, 0) == [].intArrayToBytes_Bytes()
        [].intArrayToBytes_Bytes().delete$(1, 0) : eid_outOfRange
        [].intArrayToBytes_Bytes().delete$(9223372036854775807, 0) : eid_outOfRange
        [].intArrayToBytes_Bytes().delete$(-1, 0) : eid_outOfRange
        [].intArrayToBytes_Bytes().delete$(-9223372036854775808, 0) : eid_outOfRange
        [].intArrayToBytes_Bytes().delete$(0, 1) : eid_outOfRange
        [].intArrayToBytes_Bytes().delete$(0, 9223372036854775807) : eid_outOfRange
        [].intArrayToBytes_Bytes().delete$(0, -1) : eid_outOfRange
        [].intArrayToBytes_Bytes().delete$(0, -9223372036854775808) : eid_outOfRange
        [1].intArrayToBytes_Bytes().delete$(0, 0) == [1].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes().delete$(1, 0) == [1].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes().delete$(0, 1) == [].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes().delete$(1, 1) : eid_outOfRange
        [1].intArrayToBytes_Bytes().delete$(9223372036854775807, 0) : eid_outOfRange
        [1].intArrayToBytes_Bytes().delete$(-1, 0) : eid_outOfRange
        [1].intArrayToBytes_Bytes().delete$(-9223372036854775808, 0) : eid_outOfRange
        [1].intArrayToBytes_Bytes().delete$(0, 2) : eid_outOfRange
        [1].intArrayToBytes_Bytes().delete$(0, 9223372036854775807) : eid_outOfRange
        [1].intArrayToBytes_Bytes().delete$(0, -1) : eid_outOfRange
        [1].intArrayToBytes_Bytes().delete$(0, -9223372036854775808) : eid_outOfRange
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(0, 0) == [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(0, 1) == [2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(0, 2) == [3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(0, 9) == [].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(0, 10) : eid_outOfRange
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(1, 0) == [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(1, 1) == [1, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(1, 2) == [1, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(1, 8) == [1].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(1, 9) : eid_outOfRange
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(4, 0) == [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(4, 1) == [1, 2, 3, 4, 6, 7, 8, 9].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(4, 2) == [1, 2, 3, 4, 7, 8, 9].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(4, 5) == [1, 2, 3, 4].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(4, 6) : eid_outOfRange
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(8, 0) == [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(8, 1) == [1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(8, 2) : eid_outOfRange
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(9, 0) == [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes().delete$(9, 1) : eid_outOfRange

#noinline
def testBytes_Delete(write ok Int, write errorsCoordinates List)
    var c1 Bytes = [].intArrayToBytes_Bytes()
    var c2 Bytes = [1].intArrayToBytes_Bytes()
    var c3 Bytes = [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
    var c4 Bytes = [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
    var c5 Bytes = [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
    var c6 Bytes = [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
    const c7 Bytes = c6
    test: ok, errorsCoordinates
        c1.delete(0, 0).nothing?()
        c1 == [].intArrayToBytes_Bytes()
        c1.delete(1, 0) : eid_outOfRange
        c1 == [].intArrayToBytes_Bytes()
        c1.delete(9223372036854775807, 0) : eid_outOfRange
        c1 == [].intArrayToBytes_Bytes()
        c1.delete(-1, 0) : eid_outOfRange
        c1 == [].intArrayToBytes_Bytes()
        c1.delete(-9223372036854775808, 0) : eid_outOfRange
        c1 == [].intArrayToBytes_Bytes()
        c1.delete(0, 1) : eid_outOfRange
        c1 == [].intArrayToBytes_Bytes()
        c1.delete(0, 9223372036854775807) : eid_outOfRange
        c1 == [].intArrayToBytes_Bytes()
        c1.delete(0, -1) : eid_outOfRange
        c1 == [].intArrayToBytes_Bytes()
        c1.delete(0, -9223372036854775808) : eid_outOfRange
        c1 == [].intArrayToBytes_Bytes()
        c2.delete(0, 0).nothing?()
        c2 == [1].intArrayToBytes_Bytes()
        c2.delete(1, 0).nothing?()
        c2 == [1].intArrayToBytes_Bytes()
        c2.delete(0, 2) : eid_outOfRange
        c2 == [1].intArrayToBytes_Bytes()
        c2.delete(0, 9223372036854775807) : eid_outOfRange
        c2 == [1].intArrayToBytes_Bytes()
        c2.delete(0, -1) : eid_outOfRange
        c2 == [1].intArrayToBytes_Bytes()
        c2.delete(0, -9223372036854775807) : eid_outOfRange
        c2 == [1].intArrayToBytes_Bytes()
        c2.delete(2, 0) : eid_outOfRange
        c2 == [1].intArrayToBytes_Bytes()
        c2.delete(9223372036854775807, 0) : eid_outOfRange
        c2 == [1].intArrayToBytes_Bytes()
        c2.delete(-1, 0) : eid_outOfRange
        c2 == [1].intArrayToBytes_Bytes()
        c2.delete(-9223372036854775808, 0) : eid_outOfRange
        c2 == [1].intArrayToBytes_Bytes()
        c3.delete(0, 10) : eid_outOfRange
        c3 == [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        c3.delete(1, 9) : eid_outOfRange
        c3 == [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        c3.delete(4, 6) : eid_outOfRange
        c3 == [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        c3.delete(9, 1) : eid_outOfRange
        c3 == [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        c3.delete(0, 0).nothing?()
        c3 == [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        c3.delete(0, 1).nothing?()
        c3 == [2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        c3.delete(0, 2).nothing?()
        c3 == [4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        c3.delete(0, 6).nothing?()
        c3 == [].intArrayToBytes_Bytes()
        c4.delete(1, 0).nothing?()
        c4 == [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        c4.delete(1, 1).nothing?()
        c4 == [1, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        c4.delete(1, 2).nothing?()
        c4 == [1, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        c4.delete(1, 5).nothing?()
        c4 == [1].intArrayToBytes_Bytes()
        c5.delete(4, 0).nothing?()
        c5 == [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        c5.delete(4, 1).nothing?()
        c5 == [1, 2, 3, 4, 6, 7, 8, 9].intArrayToBytes_Bytes()
        c5.delete(4, 2).nothing?()
        c5 == [1, 2, 3, 4, 8, 9].intArrayToBytes_Bytes()
        c5.delete(4, 2).nothing?()
        c5 == [1, 2, 3, 4].intArrayToBytes_Bytes()
        c6.delete(8, 0).nothing?()
        c6 == [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        c6.delete(8, 1).nothing?()
        c6 == [1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        c6.delete(8, 0).nothing?()
        c6 == [1, 2, 3, 4, 5, 6, 7, 8].intArrayToBytes_Bytes()
        c7 == [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()

#noinline
def testBytes_Replace$(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        [].intArrayToBytes_Bytes().replace$(intToByte(1), intToByte(0)) == [].intArrayToBytes_Bytes()
        [].intArrayToBytes_Bytes().replace$(intToByte(1), intToByte(1)) == [].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes().replace$(intToByte(1), intToByte(0)) == [0].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes().replace$(intToByte(1), intToByte(1)) == [1].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes().replace$(intToByte(2), intToByte(0)) == [1].intArrayToBytes_Bytes()
        [1, 2, 10, 11, 12, 2, 1].intArrayToBytes_Bytes().replace$(intToByte(1), intToByte(0)) == [0, 2, 10, 11, 12, 2, 0].intArrayToBytes_Bytes()
        [1, 2, 10, 11, 12, 2, 1].intArrayToBytes_Bytes().replace$(intToByte(2), intToByte(255)) == [1, 255, 10, 11, 12, 255, 1].intArrayToBytes_Bytes()
        [1, 2, 10, 11, 12, 2, 1].intArrayToBytes_Bytes().replace$(intToByte(3), intToByte(0)) == [1, 2, 10, 11, 12, 2, 1].intArrayToBytes_Bytes()
        [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1].intArrayToBytes_Bytes().replace$(intToByte(1), intToByte(0)) == [0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0].intArrayToBytes_Bytes()
        [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1].intArrayToBytes_Bytes().replace$(intToByte(2), intToByte(255)) == [1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1].intArrayToBytes_Bytes()
        [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1].intArrayToBytes_Bytes().replace$(intToByte(3), intToByte(0)) == [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1].intArrayToBytes_Bytes()
        [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2].intArrayToBytes_Bytes().replace$(intToByte(1), intToByte(0)) == [0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2].intArrayToBytes_Bytes()
        [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2].intArrayToBytes_Bytes().replace$(intToByte(2), intToByte(255)) == [1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255].intArrayToBytes_Bytes()
        [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2].intArrayToBytes_Bytes().replace$(intToByte(3), intToByte(0)) == [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2].intArrayToBytes_Bytes()
        [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1].intArrayToBytes_Bytes().replace$(intToByte(1), intToByte(0)) == [0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0].intArrayToBytes_Bytes()
        [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1].intArrayToBytes_Bytes().replace$(intToByte(2), intToByte(255)) == [1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1, 255, 1].intArrayToBytes_Bytes()
        [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1].intArrayToBytes_Bytes().replace$(intToByte(3), intToByte(0)) == [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1].intArrayToBytes_Bytes()

#noinline
def testBytes_Replace(write ok Int, write errorsCoordinates List)
    var c1 Bytes = [].intArrayToBytes_Bytes()
    var c2 Bytes = [1].intArrayToBytes_Bytes()
    var c3 Bytes = [1, 2, 3, 255, 128, 2, 1].intArrayToBytes_Bytes()
    var c4 Bytes = [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1].intArrayToBytes_Bytes()
    var c5 Bytes = [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2].intArrayToBytes_Bytes()
    var c6 Bytes = [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1].intArrayToBytes_Bytes()
    const c7 Bytes = c6
    test: ok, errorsCoordinates
        c1.replace(intToByte(1), intToByte(0)).nothing?()
        c1 == [].intArrayToBytes_Bytes()
        c1.replace(intToByte(2), intToByte(0)).nothing?()
        c1 == [].intArrayToBytes_Bytes()
        c2.replace(intToByte(1), intToByte(0)).nothing?()
        c2 == [0].intArrayToBytes_Bytes()
        c2.replace(intToByte(0), intToByte(3)).nothing?()
        c2 == [3].intArrayToBytes_Bytes()
        c2.replace(intToByte(2), intToByte(0)).nothing?()
        c2 == [3].intArrayToBytes_Bytes()
        c3.replace(intToByte(1), intToByte(0)).nothing?()
        c3  == [0, 2, 3, 255, 128, 2, 0].intArrayToBytes_Bytes()
        c3.replace(intToByte(1), intToByte(4)).nothing?()
        c3  == [0, 2, 3, 255, 128, 2, 0].intArrayToBytes_Bytes()
        c3.replace(intToByte(2), intToByte(11)).nothing?()
        c3  == [0, 11, 3, 255, 128, 11, 0].intArrayToBytes_Bytes()
        c3.replace(intToByte(255), intToByte(15)).nothing?()
        c3  == [0, 11, 3, 15, 128, 11, 0].intArrayToBytes_Bytes()
        c4.replace(intToByte(1), intToByte(0)).nothing?()
        c4  == [0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0].intArrayToBytes_Bytes()
        c4.replace(intToByte(2), intToByte(1)).nothing?()
        c4  == [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0].intArrayToBytes_Bytes()
        c4.replace(intToByte(3), intToByte(12)).nothing?()
        c4  == [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0].intArrayToBytes_Bytes()
        c5.replace(intToByte(1), intToByte(0)).nothing?()
        c5  == [0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2].intArrayToBytes_Bytes()
        c5.replace(intToByte(2), intToByte(1)).nothing?()
        c5  == [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1].intArrayToBytes_Bytes()
        c5.replace(intToByte(3), intToByte(12)).nothing?()
        c5  == [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1].intArrayToBytes_Bytes()
        c6.replace(intToByte(1), intToByte(0)).nothing?()
        c6  == [0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0].intArrayToBytes_Bytes()
        c6.replace(intToByte(2), intToByte(1)).nothing?()
        c6  == [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0].intArrayToBytes_Bytes()
        c6.replace(intToByte(3), intToByte(12)).nothing?()
        c6  == [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0].intArrayToBytes_Bytes()
        c7 == [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1].intArrayToBytes_Bytes()

#noinline
def testBytes_Insert$(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        [].intArrayToBytes_Bytes().insert$(1, intToByte(1)) : eid_outOfRange
        [].intArrayToBytes_Bytes().insert$(9223372036854775807, intToByte(1)) : eid_outOfRange
        [].intArrayToBytes_Bytes().insert$(-1, intToByte(1)) : eid_outOfRange
        [].intArrayToBytes_Bytes().insert$(-9223372036854775808, intToByte(1)) : eid_outOfRange
        [].intArrayToBytes_Bytes().insert$(0, intToByte(1)) == [1].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes().insert$(2, intToByte(1)) : eid_outOfRange
        [1].intArrayToBytes_Bytes().insert$(9223372036854775807, intToByte(1)) : eid_outOfRange
        [1].intArrayToBytes_Bytes().insert$(-1, intToByte(1)) : eid_outOfRange
        [1].intArrayToBytes_Bytes().insert$(-9223372036854775808, intToByte(1)) : eid_outOfRange
        [1].intArrayToBytes_Bytes().insert$(0, intToByte(2)) == [2, 1].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes().insert$(1, intToByte(2)) == [1, 2].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5].intArrayToBytes_Bytes().insert$(0, intToByte(10)) == [10, 1, 2, 3, 4, 5].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5].intArrayToBytes_Bytes().insert$(2, intToByte(10)) == [1, 2, 10, 3, 4, 5].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5].intArrayToBytes_Bytes().insert$(3, intToByte(10)) == [1, 2, 3, 10, 4, 5].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5].intArrayToBytes_Bytes().insert$(5, intToByte(10)) == [1, 2, 3, 4, 5, 10].intArrayToBytes_Bytes()

#noinline
def testBytes_Insert(write ok Int, write errorsCoordinates List)
    var c1 Bytes = [].intArrayToBytes_Bytes()
    var c2 Bytes = [1].intArrayToBytes_Bytes()
    const c3 Bytes = c2
    test: ok, errorsCoordinates
        c1.insert(1, intToByte(1)) : eid_outOfRange
        c1 == [].intArrayToBytes_Bytes()
        c1.insert(9223372036854775807, intToByte(1)) : eid_outOfRange
        c1 == [].intArrayToBytes_Bytes()
        c1.insert(-1, intToByte(1)) : eid_outOfRange
        c1 == [].intArrayToBytes_Bytes()
        c1.insert(-9223372036854775808, intToByte(1)) : eid_outOfRange
        c1 == [].intArrayToBytes_Bytes()
        c1.insert(0, intToByte(1)).nothing?()
        c1 == [1].intArrayToBytes_Bytes()
        c1.insert(2, intToByte(1)) : eid_outOfRange
        c1 == [1].intArrayToBytes_Bytes()
        c1.insert(9223372036854775807, intToByte(1)) : eid_outOfRange
        c1 == [1].intArrayToBytes_Bytes()
        c1.insert(-1, intToByte(1)) : eid_outOfRange
        c1 == [1].intArrayToBytes_Bytes()
        c1.insert(-9223372036854775808, intToByte(1)) : eid_outOfRange
        c1 == [1].intArrayToBytes_Bytes()
        c1.insert(0, intToByte(2)).nothing?()
        c1 == [2, 1].intArrayToBytes_Bytes()
        c2.insert(1, intToByte(2)).nothing?()
        c2 == [1, 2].intArrayToBytes_Bytes()
        c2.insert(0, intToByte(10)).nothing?()
        c2 == [10, 1, 2].intArrayToBytes_Bytes()
        c2.insert(2, intToByte(15)).nothing?()
        c2 == [10, 1, 15, 2].intArrayToBytes_Bytes()
        c2.insert(1, intToByte(3)).nothing?()
        c2 == [10, 3, 1, 15, 2].intArrayToBytes_Bytes()
        c2.insert(3, intToByte(1)).nothing?()
        c2 == [10, 3, 1, 1, 15, 2].intArrayToBytes_Bytes()
        c2.insert(7, intToByte(1)) : eid_outOfRange
        c2 == [10, 3, 1, 1, 15, 2].intArrayToBytes_Bytes()
        c2.insert(9223372036854775807, intToByte(1)) : eid_outOfRange
        c2 == [10, 3, 1, 1, 15, 2].intArrayToBytes_Bytes()
        c2.insert(-1, intToByte(1)) : eid_outOfRange
        c2 == [10, 3, 1, 1, 15, 2].intArrayToBytes_Bytes()
        c2.insert(-9223372036854775808, intToByte(1)) : eid_outOfRange
        c2 == [10, 3, 1, 1, 15, 2].intArrayToBytes_Bytes()
        c3 == [1].intArrayToBytes_Bytes()

#noinline
def testBytes_InsertPart$(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        [].intArrayToBytes_Bytes().insertPart$(1, [1].intArrayToBytes_Bytes()) : eid_outOfRange
        [].intArrayToBytes_Bytes().insertPart$(9223372036854775807, [1].intArrayToBytes_Bytes()) : eid_outOfRange
        [].intArrayToBytes_Bytes().insertPart$(-1, [1].intArrayToBytes_Bytes()) : eid_outOfRange
        [].intArrayToBytes_Bytes().insertPart$(-9223372036854775808, [1].intArrayToBytes_Bytes()) : eid_outOfRange
        [].intArrayToBytes_Bytes().insertPart$(0, [].intArrayToBytes_Bytes()) == [].intArrayToBytes_Bytes()
        [].intArrayToBytes_Bytes().insertPart$(0, [1].intArrayToBytes_Bytes()) == [1].intArrayToBytes_Bytes()
        [].intArrayToBytes_Bytes().insertPart$(0, [1, 2, 3].intArrayToBytes_Bytes()) == [1, 2, 3].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes().insertPart$(2, [1].intArrayToBytes_Bytes()) : eid_outOfRange
        [1].intArrayToBytes_Bytes().insertPart$(9223372036854775807, [1].intArrayToBytes_Bytes()) : eid_outOfRange
        [1].intArrayToBytes_Bytes().insertPart$(-1, [1].intArrayToBytes_Bytes()) : eid_outOfRange
        [1].intArrayToBytes_Bytes().insertPart$(-9223372036854775808, [1].intArrayToBytes_Bytes()) : eid_outOfRange
        [1].intArrayToBytes_Bytes().insertPart$(0, [].intArrayToBytes_Bytes()) == [1].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes().insertPart$(1, [].intArrayToBytes_Bytes()) == [1].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes().insertPart$(0, [2].intArrayToBytes_Bytes()) == [2, 1].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes().insertPart$(0, [2, 3].intArrayToBytes_Bytes()) == [2, 3, 1].intArrayToBytes_Bytes()
        [1].intArrayToBytes_Bytes().insertPart$(1, [1, 3].intArrayToBytes_Bytes()) == [1, 1, 3].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5].intArrayToBytes_Bytes().insertPart$(0, [254, 255].intArrayToBytes_Bytes()) == [254, 255, 1, 2, 3, 4, 5].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5].intArrayToBytes_Bytes().insertPart$(2, [254, 255].intArrayToBytes_Bytes()) == [1, 2, 254, 255, 3, 4, 5].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5].intArrayToBytes_Bytes().insertPart$(3, [254, 255].intArrayToBytes_Bytes()) == [1, 2, 3, 254, 255, 4, 5].intArrayToBytes_Bytes()
        [1, 2, 3, 4, 5].intArrayToBytes_Bytes().insertPart$(5, [254, 255].intArrayToBytes_Bytes()) == [1, 2, 3, 4, 5, 254, 255].intArrayToBytes_Bytes()

#noinline
def testBytes_InsertPart(write ok Int, write errorsCoordinates List)
    var c1 Bytes = [].intArrayToBytes_Bytes()
    var c2 Bytes = [1].intArrayToBytes_Bytes()
    test: ok, errorsCoordinates
        c1.insertPart(1, [1].intArrayToBytes_Bytes()) : eid_outOfRange
        c1 == [].intArrayToBytes_Bytes()
        c1.insertPart(9223372036854775807, [1].intArrayToBytes_Bytes()) : eid_outOfRange
        c1 == [].intArrayToBytes_Bytes()
        c1.insertPart(-1, [1].intArrayToBytes_Bytes()) : eid_outOfRange
        c1 == [].intArrayToBytes_Bytes()
        c1.insertPart(-9223372036854775808, [1].intArrayToBytes_Bytes()) : eid_outOfRange
        c1 == [].intArrayToBytes_Bytes()
        c1.insertPart(0, [].intArrayToBytes_Bytes()).nothing?()
        c1 == [].intArrayToBytes_Bytes()
        c1.insertPart(0, [1].intArrayToBytes_Bytes()).nothing?()
        c1 == [1].intArrayToBytes_Bytes()
        c1.insertPart(2, [1].intArrayToBytes_Bytes()) : eid_outOfRange
        c1 == [1].intArrayToBytes_Bytes()
        c1.insertPart(9223372036854775807, [1].intArrayToBytes_Bytes()) : eid_outOfRange
        c1 == [1].intArrayToBytes_Bytes()
        c1.insertPart(-1, [1].intArrayToBytes_Bytes()) : eid_outOfRange
        c1 == [1].intArrayToBytes_Bytes()
        c1.insertPart(-9223372036854775808, [1].intArrayToBytes_Bytes()) : eid_outOfRange
        c1 == [1].intArrayToBytes_Bytes()
        c1.insertPart(0, [].intArrayToBytes_Bytes()).nothing?()
        c1 == [1].intArrayToBytes_Bytes()
        c1.insertPart(1, [].intArrayToBytes_Bytes()).nothing?()
        c1 == [1].intArrayToBytes_Bytes()
        c1.insertPart(0, [2].intArrayToBytes_Bytes()).nothing?()
        c1 == [2, 1].intArrayToBytes_Bytes()
        c2.insertPart(1, [2].intArrayToBytes_Bytes()).nothing?()
        c2 == [1, 2].intArrayToBytes_Bytes()
        c2.insertPart(0, [2, 3].intArrayToBytes_Bytes()).nothing?()
        c2 == [2, 3, 1, 2].intArrayToBytes_Bytes()
        c2.insertPart(1, [1, 3].intArrayToBytes_Bytes()).nothing?()
        c2 == [2, 1, 3, 3, 1, 2].intArrayToBytes_Bytes()
        c2.insertPart(2, [].intArrayToBytes_Bytes()).nothing?()
        c2 == [2, 1, 3, 3, 1, 2].intArrayToBytes_Bytes()
        c2.insertPart(3, [].intArrayToBytes_Bytes()).nothing?()
        c2 == [2, 1, 3, 3, 1, 2].intArrayToBytes_Bytes()
        c2.insertPart(0, [].intArrayToBytes_Bytes()).nothing?()
        c2 == [2, 1, 3, 3, 1, 2].intArrayToBytes_Bytes()
        c2.insertPart(6, [].intArrayToBytes_Bytes()).nothing?()
        c2 == [2, 1, 3, 3, 1, 2].intArrayToBytes_Bytes()
        c2.insertPart(6, [254, 255].intArrayToBytes_Bytes()).nothing?()
        c2 == [2, 1, 3, 3, 1, 2, 254, 255].intArrayToBytes_Bytes()

#noinline
def testBytes_Repeat(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        intToByte(12).repeat(0, Bytes) == [].intArrayToBytes_Bytes()
        intToByte(12).repeat(1, Bytes) == [12].intArrayToBytes_Bytes()
        intToByte(12).repeat(2, Bytes) == [12, 12].intArrayToBytes_Bytes()
        intToByte(12).repeat(10, Bytes) == [12, 12, 12, 12, 12, 12, 12, 12, 12, 12].intArrayToBytes_Bytes()
        intToByte(12).repeat(11, Bytes) == [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12].intArrayToBytes_Bytes()
        intToByte(12).repeat(16, Bytes) == [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12].intArrayToBytes_Bytes()
        intToByte(12).repeat(-1, Bytes) : eid_outOfRange
        intToByte(12).repeat(-2, Bytes) : eid_outOfRange
        intToByte(12).repeat(-9223372036854775808, Bytes) : eid_outOfRange

#noinline
def testBytes_RepeatPart(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        [].intArrayToBytes_Bytes().repeatPart(0) == [].intArrayToBytes_Bytes()
        [].intArrayToBytes_Bytes().repeatPart(120) == [].intArrayToBytes_Bytes()
        [].intArrayToBytes_Bytes().repeatPart(-1) : eid_outOfRange
        [].intArrayToBytes_Bytes().repeatPart(-9223372036854775808) : eid_outOfRange
        [13].intArrayToBytes_Bytes().repeatPart(0) == [].intArrayToBytes_Bytes()
        [13].intArrayToBytes_Bytes().repeatPart(1) == [13].intArrayToBytes_Bytes()
        [13].intArrayToBytes_Bytes().repeatPart(2) == [13, 13].intArrayToBytes_Bytes()
        [13].intArrayToBytes_Bytes().repeatPart(10) == [13, 13, 13, 13, 13, 13, 13, 13, 13, 13].intArrayToBytes_Bytes()
        [13].intArrayToBytes_Bytes().repeatPart(11) == [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13].intArrayToBytes_Bytes()
        [13].intArrayToBytes_Bytes().repeatPart(16) == [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13].intArrayToBytes_Bytes()
        [13].intArrayToBytes_Bytes().repeatPart(-1) : eid_outOfRange
        [13].intArrayToBytes_Bytes().repeatPart(-9223372036854775808) : eid_outOfRange
        [13, 110, 100].intArrayToBytes_Bytes().repeatPart(0) == [].intArrayToBytes_Bytes()
        [13, 110, 100].intArrayToBytes_Bytes().repeatPart(1) == [13, 110, 100].intArrayToBytes_Bytes()
        [13, 110, 100].intArrayToBytes_Bytes().repeatPart(2) == [13, 110, 100, 13, 110, 100].intArrayToBytes_Bytes()
        [13, 110, 100].intArrayToBytes_Bytes().repeatPart(10) == [13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100].intArrayToBytes_Bytes()
        [13, 110, 100].intArrayToBytes_Bytes().repeatPart(11) == [13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100].intArrayToBytes_Bytes()
        [13, 110, 100].intArrayToBytes_Bytes().repeatPart(16) == [13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100, 13, 110, 100].intArrayToBytes_Bytes()
        [13, 110, 100].intArrayToBytes_Bytes().repeatPart(-1) : eid_outOfRange
        [13, 110, 100].intArrayToBytes_Bytes().repeatPart(-9223372036854775808) : eid_outOfRange

#noinline
def testBytes_ReverseFromAtoB(write ok Int, write errorsCoordinates List)
    var c Bytes = [].intArrayToBytes_Bytes()
    test: ok, errorsCoordinates
        c.reverseFromAtoB(0, 0).nothing?()
        c == [].intArrayToBytes_Bytes()
        c.reverseFromAtoB(0, 1) : eid_outOfRange
        c == [].intArrayToBytes_Bytes()
        c.reverseFromAtoB(1, 1) : eid_outOfRange
        c == [].intArrayToBytes_Bytes()
        c.reverseFromAtoB(1, 0) : eid_outOfRange
        c == [].intArrayToBytes_Bytes()
        c.reverseFromAtoB(-1, -1) : eid_outOfRange
        c == [].intArrayToBytes_Bytes()
        c.reverseFromAtoB(-9223372036854775808, 0) : eid_outOfRange
        c == [].intArrayToBytes_Bytes()
        c.reverseFromAtoB(0, -9223372036854775808) : eid_outOfRange
        c == [].intArrayToBytes_Bytes()
        c.reverseFromAtoB(0, 9223372036854775807) : eid_outOfRange
        c == [].intArrayToBytes_Bytes()
        c.reverseFromAtoB(-9223372036854775808, 9223372036854775807) : eid_outOfRange
        c == [].intArrayToBytes_Bytes()
    c = [1].intArrayToBytes_Bytes()
    test: ok, errorsCoordinates
        c.reverseFromAtoB(0, 0).nothing?()
        c == [1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(0, 1).nothing?()
        c == [1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(1, 1).nothing?()
        c == [1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(0, 2) : eid_outOfRange
        c == [1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(2, 1) : eid_outOfRange
        c == [1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(1, 2) : eid_outOfRange
        c == [1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(2, 2) : eid_outOfRange
        c == [1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(1, 0) : eid_outOfRange
        c == [1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(-1, -1) : eid_outOfRange
        c == [1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(-9223372036854775808, 1) : eid_outOfRange
        c == [1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(0, -9223372036854775808) : eid_outOfRange
        c == [1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(0, 9223372036854775807) : eid_outOfRange
        c == [1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(-9223372036854775808, 9223372036854775807) : eid_outOfRange
        c == [1].intArrayToBytes_Bytes()
    c = [1, 2].intArrayToBytes_Bytes()
    test: ok, errorsCoordinates
        c.reverseFromAtoB(0, 0).nothing?()
        c == [1, 2].intArrayToBytes_Bytes()
        c.reverseFromAtoB(0, 1).nothing?()
        c == [1, 2].intArrayToBytes_Bytes()
        c.reverseFromAtoB(1, 1).nothing?()
        c == [1, 2].intArrayToBytes_Bytes()
        c.reverseFromAtoB(1, 2).nothing?()
        c == [1, 2].intArrayToBytes_Bytes()
        c.reverseFromAtoB(2, 2).nothing?()
        c == [1, 2].intArrayToBytes_Bytes()
        c.reverseFromAtoB(0, 2).nothing?()
        c == [2, 1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(0, 3) : eid_outOfRange
        c == [2, 1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(3, 0) : eid_outOfRange
        c == [2, 1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(1, 3) : eid_outOfRange
        c == [2, 1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(3, 3) : eid_outOfRange
        c == [2, 1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(1, 0) : eid_outOfRange
        c == [2, 1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(-1, -1) : eid_outOfRange
        c == [2, 1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(-9223372036854775808, 0) : eid_outOfRange
        c == [2, 1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(0, -9223372036854775808) : eid_outOfRange
        c == [2, 1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(0, 9223372036854775807) : eid_outOfRange
        c == [2, 1].intArrayToBytes_Bytes()
        c.reverseFromAtoB(-9223372036854775808, 9223372036854775807) : eid_outOfRange
        c == [2, 1].intArrayToBytes_Bytes()
    c = [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
    test: ok, errorsCoordinates
        c.reverseFromAtoB(0, 0).nothing?()
        c == [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        c.reverseFromAtoB(0, 1).nothing?()
        c == [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        c.reverseFromAtoB(1, 1).nothing?()
        c == [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        c.reverseFromAtoB(1, 2).nothing?()
        c == [1, 2, 3, 4, 5, 6, 7, 8, 9].intArrayToBytes_Bytes()
        c.reverseFromAtoB(0, 5).nothing?()
        c == [5, 4, 3, 2, 1, 6, 7, 8, 9].intArrayToBytes_Bytes()
        c.reverseFromAtoB(5, 9).nothing?()
        c == [5, 4, 3, 2, 1, 9, 8, 7, 6].intArrayToBytes_Bytes()
        c.reverseFromAtoB(0, 9).nothing?()
        c == [6, 7, 8, 9, 1, 2, 3, 4, 5].intArrayToBytes_Bytes()
        c.reverseFromAtoB(3, 7).nothing?()
        c == [6, 7, 8, 3, 2, 1, 9, 4, 5].intArrayToBytes_Bytes()
        c.reverseFromAtoB(0, 10) : eid_outOfRange
        c == [6, 7, 8, 3, 2, 1, 9, 4, 5].intArrayToBytes_Bytes()
        c.reverseFromAtoB(3, 0) : eid_outOfRange
        c == [6, 7, 8, 3, 2, 1, 9, 4, 5].intArrayToBytes_Bytes()
        c.reverseFromAtoB(9, 0) : eid_outOfRange
        c == [6, 7, 8, 3, 2, 1, 9, 4, 5].intArrayToBytes_Bytes()
        c.reverseFromAtoB(10, 0) : eid_outOfRange
        c == [6, 7, 8, 3, 2, 1, 9, 4, 5].intArrayToBytes_Bytes()
        c.reverseFromAtoB(3, -1) : eid_outOfRange
        c == [6, 7, 8, 3, 2, 1, 9, 4, 5].intArrayToBytes_Bytes()
        c.reverseFromAtoB(-1, -1) : eid_outOfRange
        c == [6, 7, 8, 3, 2, 1, 9, 4, 5].intArrayToBytes_Bytes()
        c.reverseFromAtoB(-9223372036854775808, 0) : eid_outOfRange
        c == [6, 7, 8, 3, 2, 1, 9, 4, 5].intArrayToBytes_Bytes()
        c.reverseFromAtoB(0, -9223372036854775808) : eid_outOfRange
        c == [6, 7, 8, 3, 2, 1, 9, 4, 5].intArrayToBytes_Bytes()
        c.reverseFromAtoB(0, 9223372036854775807) : eid_outOfRange
        c == [6, 7, 8, 3, 2, 1, 9, 4, 5].intArrayToBytes_Bytes()
        c.reverseFromAtoB(-9223372036854775808, 9223372036854775807) : eid_outOfRange
        c == [6, 7, 8, 3, 2, 1, 9, 4, 5].intArrayToBytes_Bytes()
        c.reverseFromAtoB(9223372036854775807, -9223372036854775808) : eid_outOfRange
        c == [6, 7, 8, 3, 2, 1, 9, 4, 5].intArrayToBytes_Bytes()
    c = [].intArrayToBytes_Bytes()
    for :(i Int = 0) i < 128; i++
        c.addItem(intToByte(i))
    var c1 Bytes = [].intArrayToBytes_Bytes()
    for :(i Int = 63) i >= 0; i--
        c1.addItem(intToByte(i))
    var c2 Bytes = [].intArrayToBytes_Bytes()
    c2.addItem(intToByte(64))
    for :(i Int = 0) i < 64; i++
        c2.addItem(intToByte(i))
    test: ok, errorsCoordinates
        c.reverseFromAtoB(0, 64).nothing?()
        c[0 : 64] == c1
        c.reverseFromAtoB(0, 65).nothing?()
        c[0 : 65] == c2

#noinline
def testBytes_Dump(write ok Int, write errorsCoordinates List)
    test: ok, errorsCoordinates
        Bytes().dump(0) == "Type: STD::Bytes = EMPTY\n"
        Bytes().dump(1) == "  Type: STD::Bytes = EMPTY\n"
        [1, 255].intArrayToBytes_Bytes().dump(0) == "Type: STD::Bytes = 01FF\n"
        [1, 255].intArrayToBytes_Bytes().dump(1) == "  Type: STD::Bytes = 01FF\n"

#noinline
def testBytes_PrepareForThreads(write ok Int, write errorsCoordinates List)
    const b Bytes = [1, 2, 3].intArrayToBytes_Bytes()
    b.shar__rc_use()
    test: ok, errorsCoordinates
        [].intArrayToBytes_Bytes().prepareForThreads() == [].intArrayToBytes_Bytes()
        [1, 0].intArrayToBytes_Bytes().prepareForThreads() == [1, 0].intArrayToBytes_Bytes()
        b.prepareForThreads() == [1, 2, 3].intArrayToBytes_Bytes()
        b.prepareForThreads().unsafe_string_getCounter() == 1
        Bytes().unsafe_string_getCounter() == 0
    b.shar__rc_free()
