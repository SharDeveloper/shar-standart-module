module STD

//@The type represents missing values.
export primitive Nothing

#override(STD) alwaysinline
def shar__rc_free(nothingArg Nothing)
    return nothing

#override(STD) alwaysinline
def shar__rc_use(nothingArg Nothing)
    return nothing

#override(STD) alwaysinline
def shar__to_const(nothingArg Nothing)
    return nothing

#override(STD) alwaysinline nothrow
def use?(nothingArg Nothing) Bool
    return false

#override(STD) alwaysinline nothrow
def constant?(nothingArg Nothing) Bool
    return false

#override(STD) alwaysinline nothrow
def clone(nothingArg Nothing) Nothing
    return nothing

#override(STD) nothrow
def dump(nothingArg Nothing, level Int) String
    return "  ".repeatPart(level) + "Type: STD::Nothing\n"
